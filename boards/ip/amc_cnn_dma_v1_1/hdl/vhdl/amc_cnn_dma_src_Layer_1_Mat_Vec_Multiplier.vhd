-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj_dma/hdlsrc/ltehdlCNN_AMC/amc_cnn_dma_src_Layer_1_Mat_Vec_Multiplier.vhd
-- Created: 2023-02-01 23:11:33
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: amc_cnn_dma_src_Layer_1_Mat_Vec_Multiplier
-- Source Path: ltehdlCNN_AMC/DUT HDL/Conv Layer 1/Layer 1 Mat-Vec Multiplier
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.amc_cnn_dma_src_DUT_HDL_pkg.ALL;

ENTITY amc_cnn_dma_src_Layer_1_Mat_Vec_Multiplier IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn                            :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        valid                             :   IN    std_logic;
        dataOut                           :   OUT   vector_of_std_logic_vector18(0 TO 63);  -- sfix18_En14 [64]
        validOut                          :   OUT   std_logic
        );
END amc_cnn_dma_src_Layer_1_Mat_Vec_Multiplier;


ARCHITECTURE rtl OF amc_cnn_dma_src_Layer_1_Mat_Vec_Multiplier IS

  -- Component Declarations
  COMPONENT amc_cnn_dma_src_Weight_Storage_0_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder_0_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage1
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage2
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage3
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder3
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage4
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder4
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage5
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder5
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage6
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder6
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage7
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder7
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage8
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder8
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage9
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder9
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage10
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder10
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage11
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder11
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage12
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder12
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage13
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder13
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage14
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder14
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage15
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder15
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder16
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage17
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder17
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage18
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder18
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage19
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder19
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage20
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder20
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage21
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder21
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage22
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder22
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage23
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder23
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage24
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder24
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage25
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder25
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage26
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder26
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage27
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder27
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage28
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder28
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage29
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder29
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage30
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder30
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage31
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder31
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage32
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder32
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage33
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder33
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage34
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder34
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage35
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder35
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage36
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder36
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage37
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder37
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage38
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder38
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage39
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder39
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage40
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder40
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage41
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder41
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage42
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder42
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage43
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder43
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage44
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder44
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage45
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder45
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage46
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder46
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage47
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder47
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage48
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder48
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage49
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder49
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage50
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder50
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage51
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder51
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage52
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder52
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage53
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder53
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage54
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder54
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage55
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder55
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage56
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder56
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage57
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder57
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage58
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder58
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage59
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder59
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage60
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder60
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage61
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder61
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage62
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder62
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_Weight_Storage63
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          Out1                            :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En19
          );
  END COMPONENT;

  COMPONENT amc_cnn_dma_src_adder63
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En19
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En14
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : amc_cnn_dma_src_Weight_Storage_0_block
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage_0_block(rtl);

  FOR ALL : amc_cnn_dma_src_adder_0_block
    USE ENTITY work.amc_cnn_dma_src_adder_0_block(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage1
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage1(rtl);

  FOR ALL : amc_cnn_dma_src_adder1
    USE ENTITY work.amc_cnn_dma_src_adder1(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage2
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage2(rtl);

  FOR ALL : amc_cnn_dma_src_adder2
    USE ENTITY work.amc_cnn_dma_src_adder2(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage3
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage3(rtl);

  FOR ALL : amc_cnn_dma_src_adder3
    USE ENTITY work.amc_cnn_dma_src_adder3(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage4
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage4(rtl);

  FOR ALL : amc_cnn_dma_src_adder4
    USE ENTITY work.amc_cnn_dma_src_adder4(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage5
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage5(rtl);

  FOR ALL : amc_cnn_dma_src_adder5
    USE ENTITY work.amc_cnn_dma_src_adder5(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage6
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage6(rtl);

  FOR ALL : amc_cnn_dma_src_adder6
    USE ENTITY work.amc_cnn_dma_src_adder6(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage7
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage7(rtl);

  FOR ALL : amc_cnn_dma_src_adder7
    USE ENTITY work.amc_cnn_dma_src_adder7(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage8
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage8(rtl);

  FOR ALL : amc_cnn_dma_src_adder8
    USE ENTITY work.amc_cnn_dma_src_adder8(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage9
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage9(rtl);

  FOR ALL : amc_cnn_dma_src_adder9
    USE ENTITY work.amc_cnn_dma_src_adder9(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage10
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage10(rtl);

  FOR ALL : amc_cnn_dma_src_adder10
    USE ENTITY work.amc_cnn_dma_src_adder10(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage11
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage11(rtl);

  FOR ALL : amc_cnn_dma_src_adder11
    USE ENTITY work.amc_cnn_dma_src_adder11(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage12
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage12(rtl);

  FOR ALL : amc_cnn_dma_src_adder12
    USE ENTITY work.amc_cnn_dma_src_adder12(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage13
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage13(rtl);

  FOR ALL : amc_cnn_dma_src_adder13
    USE ENTITY work.amc_cnn_dma_src_adder13(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage14
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage14(rtl);

  FOR ALL : amc_cnn_dma_src_adder14
    USE ENTITY work.amc_cnn_dma_src_adder14(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage15
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage15(rtl);

  FOR ALL : amc_cnn_dma_src_adder15
    USE ENTITY work.amc_cnn_dma_src_adder15(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage16
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage16(rtl);

  FOR ALL : amc_cnn_dma_src_adder16
    USE ENTITY work.amc_cnn_dma_src_adder16(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage17
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage17(rtl);

  FOR ALL : amc_cnn_dma_src_adder17
    USE ENTITY work.amc_cnn_dma_src_adder17(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage18
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage18(rtl);

  FOR ALL : amc_cnn_dma_src_adder18
    USE ENTITY work.amc_cnn_dma_src_adder18(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage19
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage19(rtl);

  FOR ALL : amc_cnn_dma_src_adder19
    USE ENTITY work.amc_cnn_dma_src_adder19(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage20
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage20(rtl);

  FOR ALL : amc_cnn_dma_src_adder20
    USE ENTITY work.amc_cnn_dma_src_adder20(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage21
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage21(rtl);

  FOR ALL : amc_cnn_dma_src_adder21
    USE ENTITY work.amc_cnn_dma_src_adder21(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage22
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage22(rtl);

  FOR ALL : amc_cnn_dma_src_adder22
    USE ENTITY work.amc_cnn_dma_src_adder22(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage23
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage23(rtl);

  FOR ALL : amc_cnn_dma_src_adder23
    USE ENTITY work.amc_cnn_dma_src_adder23(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage24
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage24(rtl);

  FOR ALL : amc_cnn_dma_src_adder24
    USE ENTITY work.amc_cnn_dma_src_adder24(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage25
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage25(rtl);

  FOR ALL : amc_cnn_dma_src_adder25
    USE ENTITY work.amc_cnn_dma_src_adder25(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage26
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage26(rtl);

  FOR ALL : amc_cnn_dma_src_adder26
    USE ENTITY work.amc_cnn_dma_src_adder26(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage27
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage27(rtl);

  FOR ALL : amc_cnn_dma_src_adder27
    USE ENTITY work.amc_cnn_dma_src_adder27(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage28
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage28(rtl);

  FOR ALL : amc_cnn_dma_src_adder28
    USE ENTITY work.amc_cnn_dma_src_adder28(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage29
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage29(rtl);

  FOR ALL : amc_cnn_dma_src_adder29
    USE ENTITY work.amc_cnn_dma_src_adder29(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage30
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage30(rtl);

  FOR ALL : amc_cnn_dma_src_adder30
    USE ENTITY work.amc_cnn_dma_src_adder30(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage31
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage31(rtl);

  FOR ALL : amc_cnn_dma_src_adder31
    USE ENTITY work.amc_cnn_dma_src_adder31(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage32
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage32(rtl);

  FOR ALL : amc_cnn_dma_src_adder32
    USE ENTITY work.amc_cnn_dma_src_adder32(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage33
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage33(rtl);

  FOR ALL : amc_cnn_dma_src_adder33
    USE ENTITY work.amc_cnn_dma_src_adder33(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage34
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage34(rtl);

  FOR ALL : amc_cnn_dma_src_adder34
    USE ENTITY work.amc_cnn_dma_src_adder34(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage35
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage35(rtl);

  FOR ALL : amc_cnn_dma_src_adder35
    USE ENTITY work.amc_cnn_dma_src_adder35(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage36
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage36(rtl);

  FOR ALL : amc_cnn_dma_src_adder36
    USE ENTITY work.amc_cnn_dma_src_adder36(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage37
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage37(rtl);

  FOR ALL : amc_cnn_dma_src_adder37
    USE ENTITY work.amc_cnn_dma_src_adder37(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage38
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage38(rtl);

  FOR ALL : amc_cnn_dma_src_adder38
    USE ENTITY work.amc_cnn_dma_src_adder38(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage39
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage39(rtl);

  FOR ALL : amc_cnn_dma_src_adder39
    USE ENTITY work.amc_cnn_dma_src_adder39(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage40
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage40(rtl);

  FOR ALL : amc_cnn_dma_src_adder40
    USE ENTITY work.amc_cnn_dma_src_adder40(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage41
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage41(rtl);

  FOR ALL : amc_cnn_dma_src_adder41
    USE ENTITY work.amc_cnn_dma_src_adder41(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage42
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage42(rtl);

  FOR ALL : amc_cnn_dma_src_adder42
    USE ENTITY work.amc_cnn_dma_src_adder42(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage43
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage43(rtl);

  FOR ALL : amc_cnn_dma_src_adder43
    USE ENTITY work.amc_cnn_dma_src_adder43(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage44
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage44(rtl);

  FOR ALL : amc_cnn_dma_src_adder44
    USE ENTITY work.amc_cnn_dma_src_adder44(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage45
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage45(rtl);

  FOR ALL : amc_cnn_dma_src_adder45
    USE ENTITY work.amc_cnn_dma_src_adder45(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage46
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage46(rtl);

  FOR ALL : amc_cnn_dma_src_adder46
    USE ENTITY work.amc_cnn_dma_src_adder46(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage47
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage47(rtl);

  FOR ALL : amc_cnn_dma_src_adder47
    USE ENTITY work.amc_cnn_dma_src_adder47(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage48
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage48(rtl);

  FOR ALL : amc_cnn_dma_src_adder48
    USE ENTITY work.amc_cnn_dma_src_adder48(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage49
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage49(rtl);

  FOR ALL : amc_cnn_dma_src_adder49
    USE ENTITY work.amc_cnn_dma_src_adder49(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage50
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage50(rtl);

  FOR ALL : amc_cnn_dma_src_adder50
    USE ENTITY work.amc_cnn_dma_src_adder50(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage51
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage51(rtl);

  FOR ALL : amc_cnn_dma_src_adder51
    USE ENTITY work.amc_cnn_dma_src_adder51(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage52
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage52(rtl);

  FOR ALL : amc_cnn_dma_src_adder52
    USE ENTITY work.amc_cnn_dma_src_adder52(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage53
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage53(rtl);

  FOR ALL : amc_cnn_dma_src_adder53
    USE ENTITY work.amc_cnn_dma_src_adder53(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage54
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage54(rtl);

  FOR ALL : amc_cnn_dma_src_adder54
    USE ENTITY work.amc_cnn_dma_src_adder54(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage55
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage55(rtl);

  FOR ALL : amc_cnn_dma_src_adder55
    USE ENTITY work.amc_cnn_dma_src_adder55(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage56
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage56(rtl);

  FOR ALL : amc_cnn_dma_src_adder56
    USE ENTITY work.amc_cnn_dma_src_adder56(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage57
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage57(rtl);

  FOR ALL : amc_cnn_dma_src_adder57
    USE ENTITY work.amc_cnn_dma_src_adder57(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage58
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage58(rtl);

  FOR ALL : amc_cnn_dma_src_adder58
    USE ENTITY work.amc_cnn_dma_src_adder58(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage59
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage59(rtl);

  FOR ALL : amc_cnn_dma_src_adder59
    USE ENTITY work.amc_cnn_dma_src_adder59(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage60
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage60(rtl);

  FOR ALL : amc_cnn_dma_src_adder60
    USE ENTITY work.amc_cnn_dma_src_adder60(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage61
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage61(rtl);

  FOR ALL : amc_cnn_dma_src_adder61
    USE ENTITY work.amc_cnn_dma_src_adder61(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage62
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage62(rtl);

  FOR ALL : amc_cnn_dma_src_adder62
    USE ENTITY work.amc_cnn_dma_src_adder62(rtl);

  FOR ALL : amc_cnn_dma_src_Weight_Storage63
    USE ENTITY work.amc_cnn_dma_src_Weight_Storage63(rtl);

  FOR ALL : amc_cnn_dma_src_adder63
    USE ENTITY work.amc_cnn_dma_src_adder63(rtl);

  -- Signals
  SIGNAL count_Weights                    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Weight_Storage_0_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL dataIn_signed                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay_out1                       : signed(15 DOWNTO 0);  -- int16
  SIGNAL Delay1_out1                      : std_logic;
  SIGNAL adder_0_out2                     : std_logic;
  SIGNAL Weight_Storage1_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage2_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage3_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage4_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage5_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage6_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage7_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage8_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage9_out1             : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage10_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage11_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage12_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage13_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage14_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage15_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage16_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage17_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage18_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage19_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage20_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage21_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage22_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage23_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage24_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage25_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage26_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage27_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage28_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage29_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage30_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage31_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage32_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage33_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage34_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage35_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage36_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage37_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage38_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage39_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage40_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage41_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage42_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage43_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage44_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage45_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage46_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage47_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage48_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage49_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage50_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage51_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage52_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage53_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage54_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage55_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage56_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage57_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage58_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage59_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage60_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage61_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage62_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Weight_Storage63_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL Vector_Concatenate_out1          : vector_of_std_logic_vector18(0 TO 63);  -- ufix18 [64]

BEGIN
  u_Weight_Storage_0 : amc_cnn_dma_src_Weight_Storage_0_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage_0_out1  -- sfix18_En19
              );

  u_adder_0 : amc_cnn_dma_src_adder_0_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage_0_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(0),  -- sfix18_En14
              validOut => adder_0_out2
              );

  u_Weight_Storage1 : amc_cnn_dma_src_Weight_Storage1
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage1_out1  -- sfix18_En19
              );

  u_adder1 : amc_cnn_dma_src_adder1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage1_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(1)  -- sfix18_En14
              );

  u_Weight_Storage2 : amc_cnn_dma_src_Weight_Storage2
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage2_out1  -- sfix18_En19
              );

  u_adder2 : amc_cnn_dma_src_adder2
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage2_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(2)  -- sfix18_En14
              );

  u_Weight_Storage3 : amc_cnn_dma_src_Weight_Storage3
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage3_out1  -- sfix18_En19
              );

  u_adder3 : amc_cnn_dma_src_adder3
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage3_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(3)  -- sfix18_En14
              );

  u_Weight_Storage4 : amc_cnn_dma_src_Weight_Storage4
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage4_out1  -- sfix18_En19
              );

  u_adder4 : amc_cnn_dma_src_adder4
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage4_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(4)  -- sfix18_En14
              );

  u_Weight_Storage5 : amc_cnn_dma_src_Weight_Storage5
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage5_out1  -- sfix18_En19
              );

  u_adder5 : amc_cnn_dma_src_adder5
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage5_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(5)  -- sfix18_En14
              );

  u_Weight_Storage6 : amc_cnn_dma_src_Weight_Storage6
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage6_out1  -- sfix18_En19
              );

  u_adder6 : amc_cnn_dma_src_adder6
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage6_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(6)  -- sfix18_En14
              );

  u_Weight_Storage7 : amc_cnn_dma_src_Weight_Storage7
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage7_out1  -- sfix18_En19
              );

  u_adder7 : amc_cnn_dma_src_adder7
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage7_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(7)  -- sfix18_En14
              );

  u_Weight_Storage8 : amc_cnn_dma_src_Weight_Storage8
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage8_out1  -- sfix18_En19
              );

  u_adder8 : amc_cnn_dma_src_adder8
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage8_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(8)  -- sfix18_En14
              );

  u_Weight_Storage9 : amc_cnn_dma_src_Weight_Storage9
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage9_out1  -- sfix18_En19
              );

  u_adder9 : amc_cnn_dma_src_adder9
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage9_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(9)  -- sfix18_En14
              );

  u_Weight_Storage10 : amc_cnn_dma_src_Weight_Storage10
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage10_out1  -- sfix18_En19
              );

  u_adder10 : amc_cnn_dma_src_adder10
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage10_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(10)  -- sfix18_En14
              );

  u_Weight_Storage11 : amc_cnn_dma_src_Weight_Storage11
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage11_out1  -- sfix18_En19
              );

  u_adder11 : amc_cnn_dma_src_adder11
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage11_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(11)  -- sfix18_En14
              );

  u_Weight_Storage12 : amc_cnn_dma_src_Weight_Storage12
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage12_out1  -- sfix18_En19
              );

  u_adder12 : amc_cnn_dma_src_adder12
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage12_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(12)  -- sfix18_En14
              );

  u_Weight_Storage13 : amc_cnn_dma_src_Weight_Storage13
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage13_out1  -- sfix18_En19
              );

  u_adder13 : amc_cnn_dma_src_adder13
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage13_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(13)  -- sfix18_En14
              );

  u_Weight_Storage14 : amc_cnn_dma_src_Weight_Storage14
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage14_out1  -- sfix18_En19
              );

  u_adder14 : amc_cnn_dma_src_adder14
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage14_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(14)  -- sfix18_En14
              );

  u_Weight_Storage15 : amc_cnn_dma_src_Weight_Storage15
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage15_out1  -- sfix18_En19
              );

  u_adder15 : amc_cnn_dma_src_adder15
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage15_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(15)  -- sfix18_En14
              );

  u_Weight_Storage16 : amc_cnn_dma_src_Weight_Storage16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage16_out1  -- sfix18_En19
              );

  u_adder16 : amc_cnn_dma_src_adder16
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage16_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(16)  -- sfix18_En14
              );

  u_Weight_Storage17 : amc_cnn_dma_src_Weight_Storage17
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage17_out1  -- sfix18_En19
              );

  u_adder17 : amc_cnn_dma_src_adder17
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage17_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(17)  -- sfix18_En14
              );

  u_Weight_Storage18 : amc_cnn_dma_src_Weight_Storage18
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage18_out1  -- sfix18_En19
              );

  u_adder18 : amc_cnn_dma_src_adder18
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage18_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(18)  -- sfix18_En14
              );

  u_Weight_Storage19 : amc_cnn_dma_src_Weight_Storage19
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage19_out1  -- sfix18_En19
              );

  u_adder19 : amc_cnn_dma_src_adder19
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage19_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(19)  -- sfix18_En14
              );

  u_Weight_Storage20 : amc_cnn_dma_src_Weight_Storage20
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage20_out1  -- sfix18_En19
              );

  u_adder20 : amc_cnn_dma_src_adder20
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage20_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(20)  -- sfix18_En14
              );

  u_Weight_Storage21 : amc_cnn_dma_src_Weight_Storage21
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage21_out1  -- sfix18_En19
              );

  u_adder21 : amc_cnn_dma_src_adder21
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage21_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(21)  -- sfix18_En14
              );

  u_Weight_Storage22 : amc_cnn_dma_src_Weight_Storage22
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage22_out1  -- sfix18_En19
              );

  u_adder22 : amc_cnn_dma_src_adder22
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage22_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(22)  -- sfix18_En14
              );

  u_Weight_Storage23 : amc_cnn_dma_src_Weight_Storage23
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage23_out1  -- sfix18_En19
              );

  u_adder23 : amc_cnn_dma_src_adder23
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage23_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(23)  -- sfix18_En14
              );

  u_Weight_Storage24 : amc_cnn_dma_src_Weight_Storage24
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage24_out1  -- sfix18_En19
              );

  u_adder24 : amc_cnn_dma_src_adder24
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage24_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(24)  -- sfix18_En14
              );

  u_Weight_Storage25 : amc_cnn_dma_src_Weight_Storage25
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage25_out1  -- sfix18_En19
              );

  u_adder25 : amc_cnn_dma_src_adder25
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage25_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(25)  -- sfix18_En14
              );

  u_Weight_Storage26 : amc_cnn_dma_src_Weight_Storage26
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage26_out1  -- sfix18_En19
              );

  u_adder26 : amc_cnn_dma_src_adder26
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage26_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(26)  -- sfix18_En14
              );

  u_Weight_Storage27 : amc_cnn_dma_src_Weight_Storage27
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage27_out1  -- sfix18_En19
              );

  u_adder27 : amc_cnn_dma_src_adder27
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage27_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(27)  -- sfix18_En14
              );

  u_Weight_Storage28 : amc_cnn_dma_src_Weight_Storage28
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage28_out1  -- sfix18_En19
              );

  u_adder28 : amc_cnn_dma_src_adder28
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage28_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(28)  -- sfix18_En14
              );

  u_Weight_Storage29 : amc_cnn_dma_src_Weight_Storage29
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage29_out1  -- sfix18_En19
              );

  u_adder29 : amc_cnn_dma_src_adder29
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage29_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(29)  -- sfix18_En14
              );

  u_Weight_Storage30 : amc_cnn_dma_src_Weight_Storage30
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage30_out1  -- sfix18_En19
              );

  u_adder30 : amc_cnn_dma_src_adder30
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage30_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(30)  -- sfix18_En14
              );

  u_Weight_Storage31 : amc_cnn_dma_src_Weight_Storage31
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage31_out1  -- sfix18_En19
              );

  u_adder31 : amc_cnn_dma_src_adder31
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage31_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(31)  -- sfix18_En14
              );

  u_Weight_Storage32 : amc_cnn_dma_src_Weight_Storage32
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage32_out1  -- sfix18_En19
              );

  u_adder32 : amc_cnn_dma_src_adder32
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage32_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(32)  -- sfix18_En14
              );

  u_Weight_Storage33 : amc_cnn_dma_src_Weight_Storage33
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage33_out1  -- sfix18_En19
              );

  u_adder33 : amc_cnn_dma_src_adder33
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage33_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(33)  -- sfix18_En14
              );

  u_Weight_Storage34 : amc_cnn_dma_src_Weight_Storage34
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage34_out1  -- sfix18_En19
              );

  u_adder34 : amc_cnn_dma_src_adder34
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage34_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(34)  -- sfix18_En14
              );

  u_Weight_Storage35 : amc_cnn_dma_src_Weight_Storage35
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage35_out1  -- sfix18_En19
              );

  u_adder35 : amc_cnn_dma_src_adder35
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage35_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(35)  -- sfix18_En14
              );

  u_Weight_Storage36 : amc_cnn_dma_src_Weight_Storage36
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage36_out1  -- sfix18_En19
              );

  u_adder36 : amc_cnn_dma_src_adder36
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage36_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(36)  -- sfix18_En14
              );

  u_Weight_Storage37 : amc_cnn_dma_src_Weight_Storage37
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage37_out1  -- sfix18_En19
              );

  u_adder37 : amc_cnn_dma_src_adder37
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage37_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(37)  -- sfix18_En14
              );

  u_Weight_Storage38 : amc_cnn_dma_src_Weight_Storage38
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage38_out1  -- sfix18_En19
              );

  u_adder38 : amc_cnn_dma_src_adder38
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage38_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(38)  -- sfix18_En14
              );

  u_Weight_Storage39 : amc_cnn_dma_src_Weight_Storage39
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage39_out1  -- sfix18_En19
              );

  u_adder39 : amc_cnn_dma_src_adder39
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage39_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(39)  -- sfix18_En14
              );

  u_Weight_Storage40 : amc_cnn_dma_src_Weight_Storage40
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage40_out1  -- sfix18_En19
              );

  u_adder40 : amc_cnn_dma_src_adder40
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage40_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(40)  -- sfix18_En14
              );

  u_Weight_Storage41 : amc_cnn_dma_src_Weight_Storage41
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage41_out1  -- sfix18_En19
              );

  u_adder41 : amc_cnn_dma_src_adder41
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage41_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(41)  -- sfix18_En14
              );

  u_Weight_Storage42 : amc_cnn_dma_src_Weight_Storage42
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage42_out1  -- sfix18_En19
              );

  u_adder42 : amc_cnn_dma_src_adder42
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage42_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(42)  -- sfix18_En14
              );

  u_Weight_Storage43 : amc_cnn_dma_src_Weight_Storage43
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage43_out1  -- sfix18_En19
              );

  u_adder43 : amc_cnn_dma_src_adder43
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage43_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(43)  -- sfix18_En14
              );

  u_Weight_Storage44 : amc_cnn_dma_src_Weight_Storage44
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage44_out1  -- sfix18_En19
              );

  u_adder44 : amc_cnn_dma_src_adder44
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage44_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(44)  -- sfix18_En14
              );

  u_Weight_Storage45 : amc_cnn_dma_src_Weight_Storage45
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage45_out1  -- sfix18_En19
              );

  u_adder45 : amc_cnn_dma_src_adder45
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage45_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(45)  -- sfix18_En14
              );

  u_Weight_Storage46 : amc_cnn_dma_src_Weight_Storage46
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage46_out1  -- sfix18_En19
              );

  u_adder46 : amc_cnn_dma_src_adder46
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage46_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(46)  -- sfix18_En14
              );

  u_Weight_Storage47 : amc_cnn_dma_src_Weight_Storage47
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage47_out1  -- sfix18_En19
              );

  u_adder47 : amc_cnn_dma_src_adder47
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage47_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(47)  -- sfix18_En14
              );

  u_Weight_Storage48 : amc_cnn_dma_src_Weight_Storage48
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage48_out1  -- sfix18_En19
              );

  u_adder48 : amc_cnn_dma_src_adder48
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage48_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(48)  -- sfix18_En14
              );

  u_Weight_Storage49 : amc_cnn_dma_src_Weight_Storage49
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage49_out1  -- sfix18_En19
              );

  u_adder49 : amc_cnn_dma_src_adder49
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage49_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(49)  -- sfix18_En14
              );

  u_Weight_Storage50 : amc_cnn_dma_src_Weight_Storage50
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage50_out1  -- sfix18_En19
              );

  u_adder50 : amc_cnn_dma_src_adder50
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage50_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(50)  -- sfix18_En14
              );

  u_Weight_Storage51 : amc_cnn_dma_src_Weight_Storage51
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage51_out1  -- sfix18_En19
              );

  u_adder51 : amc_cnn_dma_src_adder51
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage51_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(51)  -- sfix18_En14
              );

  u_Weight_Storage52 : amc_cnn_dma_src_Weight_Storage52
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage52_out1  -- sfix18_En19
              );

  u_adder52 : amc_cnn_dma_src_adder52
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage52_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(52)  -- sfix18_En14
              );

  u_Weight_Storage53 : amc_cnn_dma_src_Weight_Storage53
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage53_out1  -- sfix18_En19
              );

  u_adder53 : amc_cnn_dma_src_adder53
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage53_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(53)  -- sfix18_En14
              );

  u_Weight_Storage54 : amc_cnn_dma_src_Weight_Storage54
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage54_out1  -- sfix18_En19
              );

  u_adder54 : amc_cnn_dma_src_adder54
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage54_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(54)  -- sfix18_En14
              );

  u_Weight_Storage55 : amc_cnn_dma_src_Weight_Storage55
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage55_out1  -- sfix18_En19
              );

  u_adder55 : amc_cnn_dma_src_adder55
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage55_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(55)  -- sfix18_En14
              );

  u_Weight_Storage56 : amc_cnn_dma_src_Weight_Storage56
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage56_out1  -- sfix18_En19
              );

  u_adder56 : amc_cnn_dma_src_adder56
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage56_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(56)  -- sfix18_En14
              );

  u_Weight_Storage57 : amc_cnn_dma_src_Weight_Storage57
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage57_out1  -- sfix18_En19
              );

  u_adder57 : amc_cnn_dma_src_adder57
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage57_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(57)  -- sfix18_En14
              );

  u_Weight_Storage58 : amc_cnn_dma_src_Weight_Storage58
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage58_out1  -- sfix18_En19
              );

  u_adder58 : amc_cnn_dma_src_adder58
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage58_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(58)  -- sfix18_En14
              );

  u_Weight_Storage59 : amc_cnn_dma_src_Weight_Storage59
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage59_out1  -- sfix18_En19
              );

  u_adder59 : amc_cnn_dma_src_adder59
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage59_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(59)  -- sfix18_En14
              );

  u_Weight_Storage60 : amc_cnn_dma_src_Weight_Storage60
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage60_out1  -- sfix18_En19
              );

  u_adder60 : amc_cnn_dma_src_adder60
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage60_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(60)  -- sfix18_En14
              );

  u_Weight_Storage61 : amc_cnn_dma_src_Weight_Storage61
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage61_out1  -- sfix18_En19
              );

  u_adder61 : amc_cnn_dma_src_adder61
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage61_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(61)  -- sfix18_En14
              );

  u_Weight_Storage62 : amc_cnn_dma_src_Weight_Storage62
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage62_out1  -- sfix18_En19
              );

  u_adder62 : amc_cnn_dma_src_adder62
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage62_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(62)  -- sfix18_En14
              );

  u_Weight_Storage63 : amc_cnn_dma_src_Weight_Storage63
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix2
              Out1 => Weight_Storage63_out1  -- sfix18_En19
              );

  u_adder63 : amc_cnn_dma_src_adder63
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage63_out1,  -- sfix18_En19
              In2 => std_logic_vector(Delay_out1),  -- int16
              In3 => Delay1_out1,
              dataOut => Vector_Concatenate_out1(63)  -- sfix18_En14
              );

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 2
  HDL_Counter_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        count_Weights <= to_unsigned(16#0#, 2);
      ELSIF enb = '1' THEN
        IF valid = '1' THEN 
          IF count_Weights >= to_unsigned(16#2#, 2) THEN 
            count_Weights <= to_unsigned(16#0#, 2);
          ELSE 
            count_Weights <= count_Weights + to_unsigned(16#1#, 2);
          END IF;
        END IF;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  dataIn_signed <= signed(dataIn);

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay_out1 <= dataIn_signed;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay1_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay1_out1 <= valid;
      END IF;
    END IF;
  END PROCESS Delay1_process;



  validOut <= adder_0_out2;

  dataOut <= Vector_Concatenate_out1;

END rtl;

