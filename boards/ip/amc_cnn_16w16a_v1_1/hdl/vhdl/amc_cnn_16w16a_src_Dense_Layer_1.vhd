-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/amc_model_w16a16/amc_cnn_16w16a_src_Dense_Layer_1.vhd
-- Created: 2023-08-04 11:27:30
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: amc_cnn_16w16a_src_Dense_Layer_1
-- Source Path: amc_model_w16a16/DUT HDL/Dense Layer 1/Dense Layer 1
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.amc_cnn_16w16a_src_DUT_HDL_pkg.ALL;

ENTITY amc_cnn_16w16a_src_Dense_Layer_1 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn                            :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        valid                             :   IN    std_logic;
        dataOut                           :   OUT   vector_of_std_logic_vector16(0 TO 127);  -- sfix16_En1 [128]
        validOut                          :   OUT   std_logic
        );
END amc_cnn_16w16a_src_Dense_Layer_1;


ARCHITECTURE rtl OF amc_cnn_16w16a_src_Dense_Layer_1 IS

  -- Component Declarations
  COMPONENT amc_cnn_16w16a_src_Weight_Storage_0_block17
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder_0_block1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En1
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage1_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder1_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage2_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder2_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage3_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder3_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage4_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder4_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage5_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder5_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage6_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder6_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage7_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder7_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage8_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder8_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage9_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder9_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage10_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder10_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage11_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder11_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage12_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder12_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage13_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder13_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage14_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder14_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage15_block16
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder15_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage16_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder16_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage17_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder17_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage18_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder18_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage19_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder19_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage20_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder20_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage21_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder21_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage22_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder22_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage23_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder23_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage24_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder24_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage25_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder25_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage26_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder26_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage27_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder27_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage28_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder28_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage29_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder29_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage30_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder30_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage31_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder31_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage32_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder32_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage33_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder33_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage34_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder34_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage35_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder35_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage36_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder36_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage37_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder37_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage38_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder38_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage39_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder39_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage40_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder40_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage41_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder41_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage42_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder42_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage43_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder43_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage44_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder44_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage45_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder45_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage46_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder46_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage47_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder47_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage48_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder48_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage49_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder49_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage50_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder50_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage51_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder51_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage52_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder52_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage53_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder53_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage54_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder54_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage55_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder55_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage56_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder56_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage57_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder57_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage58_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder58_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage59_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder59_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage60_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder60_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage61_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder61_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage62_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder62_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage63_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder63_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage64
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder64
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage65
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder65
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage66
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder66
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage67
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder67
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage68
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder68
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage69
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder69
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage70
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder70
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage71
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder71
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage72
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder72
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage73
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder73
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage74
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder74
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage75
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder75
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage76
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder76
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage77
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder77
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage78
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder78
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage79
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder79
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage80
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder80
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage81
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder81
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage82
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder82
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage83
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder83
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage84
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder84
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage85
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder85
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage86
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder86
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage87
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder87
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage88
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder88
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage89
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder89
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage90
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder90
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage91
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder91
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage92
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder92
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage93
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder93
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage94
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder94
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage95
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder95
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage96
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder96
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage97
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder97
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage98
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder98
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage99
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder99
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage100
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder100
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage101
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder101
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage102
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder102
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage103
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder103
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage104
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder104
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage105
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder105
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage106
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder106
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage107
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder107
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage108
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder108
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage109
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder109
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage110
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder110
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage111
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder111
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage112
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder112
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage113
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder113
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage114
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder114
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage115
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder115
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage116
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder116
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage117
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder117
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage118
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder118
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage119
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder119
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage120
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder120
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage121
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder121
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage122
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder122
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage123
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder123
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage124
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder124
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage125
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder125
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage126
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder126
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_Weight_Storage127
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          count_Weights                   :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT amc_cnn_16w16a_src_adder127
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          In2                             :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
          In3                             :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : amc_cnn_16w16a_src_Weight_Storage_0_block17
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage_0_block17(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder_0_block1
    USE ENTITY work.amc_cnn_16w16a_src_adder_0_block1(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage1_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage1_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder1_block
    USE ENTITY work.amc_cnn_16w16a_src_adder1_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage2_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage2_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder2_block
    USE ENTITY work.amc_cnn_16w16a_src_adder2_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage3_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage3_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder3_block
    USE ENTITY work.amc_cnn_16w16a_src_adder3_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage4_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage4_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder4_block
    USE ENTITY work.amc_cnn_16w16a_src_adder4_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage5_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage5_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder5_block
    USE ENTITY work.amc_cnn_16w16a_src_adder5_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage6_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage6_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder6_block
    USE ENTITY work.amc_cnn_16w16a_src_adder6_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage7_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage7_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder7_block
    USE ENTITY work.amc_cnn_16w16a_src_adder7_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage8_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage8_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder8_block
    USE ENTITY work.amc_cnn_16w16a_src_adder8_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage9_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage9_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder9_block
    USE ENTITY work.amc_cnn_16w16a_src_adder9_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage10_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage10_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder10_block
    USE ENTITY work.amc_cnn_16w16a_src_adder10_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage11_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage11_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder11_block
    USE ENTITY work.amc_cnn_16w16a_src_adder11_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage12_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage12_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder12_block
    USE ENTITY work.amc_cnn_16w16a_src_adder12_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage13_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage13_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder13_block
    USE ENTITY work.amc_cnn_16w16a_src_adder13_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage14_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage14_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder14_block
    USE ENTITY work.amc_cnn_16w16a_src_adder14_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage15_block16
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage15_block16(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder15_block
    USE ENTITY work.amc_cnn_16w16a_src_adder15_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage16_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage16_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder16_block
    USE ENTITY work.amc_cnn_16w16a_src_adder16_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage17_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage17_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder17_block
    USE ENTITY work.amc_cnn_16w16a_src_adder17_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage18_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage18_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder18_block
    USE ENTITY work.amc_cnn_16w16a_src_adder18_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage19_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage19_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder19_block
    USE ENTITY work.amc_cnn_16w16a_src_adder19_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage20_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage20_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder20_block
    USE ENTITY work.amc_cnn_16w16a_src_adder20_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage21_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage21_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder21_block
    USE ENTITY work.amc_cnn_16w16a_src_adder21_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage22_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage22_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder22_block
    USE ENTITY work.amc_cnn_16w16a_src_adder22_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage23_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage23_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder23_block
    USE ENTITY work.amc_cnn_16w16a_src_adder23_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage24_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage24_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder24_block
    USE ENTITY work.amc_cnn_16w16a_src_adder24_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage25_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage25_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder25_block
    USE ENTITY work.amc_cnn_16w16a_src_adder25_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage26_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage26_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder26_block
    USE ENTITY work.amc_cnn_16w16a_src_adder26_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage27_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage27_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder27_block
    USE ENTITY work.amc_cnn_16w16a_src_adder27_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage28_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage28_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder28_block
    USE ENTITY work.amc_cnn_16w16a_src_adder28_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage29_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage29_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder29_block
    USE ENTITY work.amc_cnn_16w16a_src_adder29_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage30_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage30_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder30_block
    USE ENTITY work.amc_cnn_16w16a_src_adder30_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage31_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage31_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder31_block
    USE ENTITY work.amc_cnn_16w16a_src_adder31_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage32_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage32_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder32_block
    USE ENTITY work.amc_cnn_16w16a_src_adder32_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage33_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage33_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder33_block
    USE ENTITY work.amc_cnn_16w16a_src_adder33_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage34_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage34_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder34_block
    USE ENTITY work.amc_cnn_16w16a_src_adder34_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage35_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage35_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder35_block
    USE ENTITY work.amc_cnn_16w16a_src_adder35_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage36_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage36_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder36_block
    USE ENTITY work.amc_cnn_16w16a_src_adder36_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage37_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage37_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder37_block
    USE ENTITY work.amc_cnn_16w16a_src_adder37_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage38_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage38_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder38_block
    USE ENTITY work.amc_cnn_16w16a_src_adder38_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage39_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage39_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder39_block
    USE ENTITY work.amc_cnn_16w16a_src_adder39_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage40_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage40_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder40_block
    USE ENTITY work.amc_cnn_16w16a_src_adder40_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage41_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage41_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder41_block
    USE ENTITY work.amc_cnn_16w16a_src_adder41_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage42_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage42_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder42_block
    USE ENTITY work.amc_cnn_16w16a_src_adder42_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage43_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage43_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder43_block
    USE ENTITY work.amc_cnn_16w16a_src_adder43_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage44_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage44_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder44_block
    USE ENTITY work.amc_cnn_16w16a_src_adder44_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage45_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage45_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder45_block
    USE ENTITY work.amc_cnn_16w16a_src_adder45_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage46_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage46_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder46_block
    USE ENTITY work.amc_cnn_16w16a_src_adder46_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage47_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage47_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder47_block
    USE ENTITY work.amc_cnn_16w16a_src_adder47_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage48_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage48_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder48_block
    USE ENTITY work.amc_cnn_16w16a_src_adder48_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage49_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage49_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder49_block
    USE ENTITY work.amc_cnn_16w16a_src_adder49_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage50_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage50_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder50_block
    USE ENTITY work.amc_cnn_16w16a_src_adder50_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage51_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage51_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder51_block
    USE ENTITY work.amc_cnn_16w16a_src_adder51_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage52_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage52_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder52_block
    USE ENTITY work.amc_cnn_16w16a_src_adder52_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage53_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage53_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder53_block
    USE ENTITY work.amc_cnn_16w16a_src_adder53_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage54_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage54_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder54_block
    USE ENTITY work.amc_cnn_16w16a_src_adder54_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage55_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage55_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder55_block
    USE ENTITY work.amc_cnn_16w16a_src_adder55_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage56_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage56_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder56_block
    USE ENTITY work.amc_cnn_16w16a_src_adder56_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage57_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage57_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder57_block
    USE ENTITY work.amc_cnn_16w16a_src_adder57_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage58_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage58_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder58_block
    USE ENTITY work.amc_cnn_16w16a_src_adder58_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage59_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage59_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder59_block
    USE ENTITY work.amc_cnn_16w16a_src_adder59_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage60_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage60_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder60_block
    USE ENTITY work.amc_cnn_16w16a_src_adder60_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage61_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage61_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder61_block
    USE ENTITY work.amc_cnn_16w16a_src_adder61_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage62_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage62_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder62_block
    USE ENTITY work.amc_cnn_16w16a_src_adder62_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage63_block
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage63_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder63_block
    USE ENTITY work.amc_cnn_16w16a_src_adder63_block(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage64
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage64(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder64
    USE ENTITY work.amc_cnn_16w16a_src_adder64(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage65
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage65(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder65
    USE ENTITY work.amc_cnn_16w16a_src_adder65(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage66
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage66(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder66
    USE ENTITY work.amc_cnn_16w16a_src_adder66(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage67
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage67(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder67
    USE ENTITY work.amc_cnn_16w16a_src_adder67(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage68
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage68(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder68
    USE ENTITY work.amc_cnn_16w16a_src_adder68(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage69
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage69(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder69
    USE ENTITY work.amc_cnn_16w16a_src_adder69(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage70
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage70(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder70
    USE ENTITY work.amc_cnn_16w16a_src_adder70(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage71
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage71(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder71
    USE ENTITY work.amc_cnn_16w16a_src_adder71(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage72
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage72(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder72
    USE ENTITY work.amc_cnn_16w16a_src_adder72(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage73
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage73(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder73
    USE ENTITY work.amc_cnn_16w16a_src_adder73(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage74
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage74(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder74
    USE ENTITY work.amc_cnn_16w16a_src_adder74(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage75
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage75(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder75
    USE ENTITY work.amc_cnn_16w16a_src_adder75(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage76
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage76(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder76
    USE ENTITY work.amc_cnn_16w16a_src_adder76(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage77
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage77(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder77
    USE ENTITY work.amc_cnn_16w16a_src_adder77(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage78
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage78(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder78
    USE ENTITY work.amc_cnn_16w16a_src_adder78(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage79
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage79(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder79
    USE ENTITY work.amc_cnn_16w16a_src_adder79(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage80
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage80(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder80
    USE ENTITY work.amc_cnn_16w16a_src_adder80(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage81
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage81(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder81
    USE ENTITY work.amc_cnn_16w16a_src_adder81(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage82
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage82(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder82
    USE ENTITY work.amc_cnn_16w16a_src_adder82(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage83
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage83(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder83
    USE ENTITY work.amc_cnn_16w16a_src_adder83(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage84
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage84(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder84
    USE ENTITY work.amc_cnn_16w16a_src_adder84(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage85
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage85(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder85
    USE ENTITY work.amc_cnn_16w16a_src_adder85(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage86
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage86(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder86
    USE ENTITY work.amc_cnn_16w16a_src_adder86(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage87
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage87(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder87
    USE ENTITY work.amc_cnn_16w16a_src_adder87(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage88
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage88(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder88
    USE ENTITY work.amc_cnn_16w16a_src_adder88(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage89
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage89(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder89
    USE ENTITY work.amc_cnn_16w16a_src_adder89(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage90
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage90(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder90
    USE ENTITY work.amc_cnn_16w16a_src_adder90(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage91
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage91(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder91
    USE ENTITY work.amc_cnn_16w16a_src_adder91(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage92
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage92(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder92
    USE ENTITY work.amc_cnn_16w16a_src_adder92(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage93
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage93(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder93
    USE ENTITY work.amc_cnn_16w16a_src_adder93(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage94
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage94(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder94
    USE ENTITY work.amc_cnn_16w16a_src_adder94(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage95
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage95(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder95
    USE ENTITY work.amc_cnn_16w16a_src_adder95(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage96
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage96(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder96
    USE ENTITY work.amc_cnn_16w16a_src_adder96(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage97
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage97(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder97
    USE ENTITY work.amc_cnn_16w16a_src_adder97(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage98
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage98(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder98
    USE ENTITY work.amc_cnn_16w16a_src_adder98(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage99
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage99(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder99
    USE ENTITY work.amc_cnn_16w16a_src_adder99(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage100
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage100(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder100
    USE ENTITY work.amc_cnn_16w16a_src_adder100(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage101
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage101(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder101
    USE ENTITY work.amc_cnn_16w16a_src_adder101(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage102
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage102(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder102
    USE ENTITY work.amc_cnn_16w16a_src_adder102(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage103
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage103(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder103
    USE ENTITY work.amc_cnn_16w16a_src_adder103(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage104
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage104(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder104
    USE ENTITY work.amc_cnn_16w16a_src_adder104(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage105
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage105(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder105
    USE ENTITY work.amc_cnn_16w16a_src_adder105(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage106
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage106(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder106
    USE ENTITY work.amc_cnn_16w16a_src_adder106(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage107
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage107(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder107
    USE ENTITY work.amc_cnn_16w16a_src_adder107(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage108
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage108(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder108
    USE ENTITY work.amc_cnn_16w16a_src_adder108(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage109
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage109(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder109
    USE ENTITY work.amc_cnn_16w16a_src_adder109(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage110
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage110(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder110
    USE ENTITY work.amc_cnn_16w16a_src_adder110(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage111
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage111(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder111
    USE ENTITY work.amc_cnn_16w16a_src_adder111(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage112
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage112(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder112
    USE ENTITY work.amc_cnn_16w16a_src_adder112(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage113
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage113(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder113
    USE ENTITY work.amc_cnn_16w16a_src_adder113(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage114
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage114(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder114
    USE ENTITY work.amc_cnn_16w16a_src_adder114(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage115
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage115(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder115
    USE ENTITY work.amc_cnn_16w16a_src_adder115(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage116
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage116(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder116
    USE ENTITY work.amc_cnn_16w16a_src_adder116(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage117
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage117(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder117
    USE ENTITY work.amc_cnn_16w16a_src_adder117(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage118
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage118(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder118
    USE ENTITY work.amc_cnn_16w16a_src_adder118(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage119
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage119(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder119
    USE ENTITY work.amc_cnn_16w16a_src_adder119(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage120
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage120(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder120
    USE ENTITY work.amc_cnn_16w16a_src_adder120(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage121
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage121(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder121
    USE ENTITY work.amc_cnn_16w16a_src_adder121(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage122
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage122(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder122
    USE ENTITY work.amc_cnn_16w16a_src_adder122(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage123
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage123(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder123
    USE ENTITY work.amc_cnn_16w16a_src_adder123(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage124
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage124(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder124
    USE ENTITY work.amc_cnn_16w16a_src_adder124(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage125
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage125(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder125
    USE ENTITY work.amc_cnn_16w16a_src_adder125(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage126
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage126(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder126
    USE ENTITY work.amc_cnn_16w16a_src_adder126(rtl);

  FOR ALL : amc_cnn_16w16a_src_Weight_Storage127
    USE ENTITY work.amc_cnn_16w16a_src_Weight_Storage127(rtl);

  FOR ALL : amc_cnn_16w16a_src_adder127
    USE ENTITY work.amc_cnn_16w16a_src_adder127(rtl);

  -- Signals
  SIGNAL count_Weights                    : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL weight                           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dataIn_signed                    : signed(15 DOWNTO 0);  -- int16
  SIGNAL sampleIn                         : signed(15 DOWNTO 0);  -- int16
  SIGNAL valid_1                          : std_logic;
  SIGNAL Weight_Storage1_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage2_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage3_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage4_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage5_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage6_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage7_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage8_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage9_out1             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage10_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage11_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage12_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage13_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage14_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage15_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage16_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage17_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage18_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage19_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage20_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage21_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage22_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage23_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage24_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage25_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage26_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage27_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage28_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage29_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage30_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage31_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage32_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage33_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage34_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage35_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage36_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage37_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage38_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage39_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage40_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage41_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage42_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage43_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage44_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage45_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage46_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage47_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage48_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage49_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage50_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage51_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage52_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage53_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage54_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage55_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage56_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage57_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage58_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage59_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage60_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage61_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage62_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage63_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage64_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage65_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage66_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage67_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage68_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage69_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage70_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage71_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage72_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage73_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage74_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage75_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage76_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage77_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage78_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage79_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage80_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage81_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage82_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage83_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage84_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage85_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage86_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage87_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage88_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage89_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage90_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage91_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage92_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage93_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage94_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage95_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage96_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage97_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage98_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage99_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage100_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage101_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage102_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage103_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage104_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage105_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage106_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage107_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage108_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage109_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage110_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage111_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage112_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage113_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage114_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage115_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage116_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage117_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage118_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage119_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage120_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage121_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage122_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage123_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage124_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage125_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage126_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Weight_Storage127_out1           : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dataOut_tmp                      : vector_of_std_logic_vector16(0 TO 127);  -- ufix16 [128]

BEGIN
  u_Weight_Storage_0 : amc_cnn_16w16a_src_Weight_Storage_0_block17
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => weight  -- sfix16_En15
              );

  u_adder_0 : amc_cnn_16w16a_src_adder_0_block1
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => weight,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(0),  -- sfix16_En1
              validOut => validOut
              );

  u_Weight_Storage1 : amc_cnn_16w16a_src_Weight_Storage1_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage1_out1  -- sfix16_En15
              );

  u_adder1 : amc_cnn_16w16a_src_adder1_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage1_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(1)  -- sfix16_En1
              );

  u_Weight_Storage2 : amc_cnn_16w16a_src_Weight_Storage2_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage2_out1  -- sfix16_En15
              );

  u_adder2 : amc_cnn_16w16a_src_adder2_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage2_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(2)  -- sfix16_En1
              );

  u_Weight_Storage3 : amc_cnn_16w16a_src_Weight_Storage3_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage3_out1  -- sfix16_En15
              );

  u_adder3 : amc_cnn_16w16a_src_adder3_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage3_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(3)  -- sfix16_En1
              );

  u_Weight_Storage4 : amc_cnn_16w16a_src_Weight_Storage4_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage4_out1  -- sfix16_En15
              );

  u_adder4 : amc_cnn_16w16a_src_adder4_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage4_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(4)  -- sfix16_En1
              );

  u_Weight_Storage5 : amc_cnn_16w16a_src_Weight_Storage5_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage5_out1  -- sfix16_En15
              );

  u_adder5 : amc_cnn_16w16a_src_adder5_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage5_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(5)  -- sfix16_En1
              );

  u_Weight_Storage6 : amc_cnn_16w16a_src_Weight_Storage6_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage6_out1  -- sfix16_En15
              );

  u_adder6 : amc_cnn_16w16a_src_adder6_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage6_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(6)  -- sfix16_En1
              );

  u_Weight_Storage7 : amc_cnn_16w16a_src_Weight_Storage7_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage7_out1  -- sfix16_En15
              );

  u_adder7 : amc_cnn_16w16a_src_adder7_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage7_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(7)  -- sfix16_En1
              );

  u_Weight_Storage8 : amc_cnn_16w16a_src_Weight_Storage8_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage8_out1  -- sfix16_En15
              );

  u_adder8 : amc_cnn_16w16a_src_adder8_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage8_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(8)  -- sfix16_En1
              );

  u_Weight_Storage9 : amc_cnn_16w16a_src_Weight_Storage9_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage9_out1  -- sfix16_En15
              );

  u_adder9 : amc_cnn_16w16a_src_adder9_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage9_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(9)  -- sfix16_En1
              );

  u_Weight_Storage10 : amc_cnn_16w16a_src_Weight_Storage10_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage10_out1  -- sfix16_En15
              );

  u_adder10 : amc_cnn_16w16a_src_adder10_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage10_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(10)  -- sfix16_En1
              );

  u_Weight_Storage11 : amc_cnn_16w16a_src_Weight_Storage11_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage11_out1  -- sfix16_En15
              );

  u_adder11 : amc_cnn_16w16a_src_adder11_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage11_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(11)  -- sfix16_En1
              );

  u_Weight_Storage12 : amc_cnn_16w16a_src_Weight_Storage12_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage12_out1  -- sfix16_En15
              );

  u_adder12 : amc_cnn_16w16a_src_adder12_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage12_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(12)  -- sfix16_En1
              );

  u_Weight_Storage13 : amc_cnn_16w16a_src_Weight_Storage13_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage13_out1  -- sfix16_En15
              );

  u_adder13 : amc_cnn_16w16a_src_adder13_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage13_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(13)  -- sfix16_En1
              );

  u_Weight_Storage14 : amc_cnn_16w16a_src_Weight_Storage14_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage14_out1  -- sfix16_En15
              );

  u_adder14 : amc_cnn_16w16a_src_adder14_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage14_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(14)  -- sfix16_En1
              );

  u_Weight_Storage15 : amc_cnn_16w16a_src_Weight_Storage15_block16
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage15_out1  -- sfix16_En15
              );

  u_adder15 : amc_cnn_16w16a_src_adder15_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage15_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(15)  -- sfix16_En1
              );

  u_Weight_Storage16 : amc_cnn_16w16a_src_Weight_Storage16_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage16_out1  -- sfix16_En15
              );

  u_adder16 : amc_cnn_16w16a_src_adder16_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage16_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(16)  -- sfix16_En1
              );

  u_Weight_Storage17 : amc_cnn_16w16a_src_Weight_Storage17_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage17_out1  -- sfix16_En15
              );

  u_adder17 : amc_cnn_16w16a_src_adder17_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage17_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(17)  -- sfix16_En1
              );

  u_Weight_Storage18 : amc_cnn_16w16a_src_Weight_Storage18_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage18_out1  -- sfix16_En15
              );

  u_adder18 : amc_cnn_16w16a_src_adder18_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage18_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(18)  -- sfix16_En1
              );

  u_Weight_Storage19 : amc_cnn_16w16a_src_Weight_Storage19_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage19_out1  -- sfix16_En15
              );

  u_adder19 : amc_cnn_16w16a_src_adder19_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage19_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(19)  -- sfix16_En1
              );

  u_Weight_Storage20 : amc_cnn_16w16a_src_Weight_Storage20_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage20_out1  -- sfix16_En15
              );

  u_adder20 : amc_cnn_16w16a_src_adder20_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage20_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(20)  -- sfix16_En1
              );

  u_Weight_Storage21 : amc_cnn_16w16a_src_Weight_Storage21_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage21_out1  -- sfix16_En15
              );

  u_adder21 : amc_cnn_16w16a_src_adder21_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage21_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(21)  -- sfix16_En1
              );

  u_Weight_Storage22 : amc_cnn_16w16a_src_Weight_Storage22_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage22_out1  -- sfix16_En15
              );

  u_adder22 : amc_cnn_16w16a_src_adder22_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage22_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(22)  -- sfix16_En1
              );

  u_Weight_Storage23 : amc_cnn_16w16a_src_Weight_Storage23_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage23_out1  -- sfix16_En15
              );

  u_adder23 : amc_cnn_16w16a_src_adder23_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage23_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(23)  -- sfix16_En1
              );

  u_Weight_Storage24 : amc_cnn_16w16a_src_Weight_Storage24_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage24_out1  -- sfix16_En15
              );

  u_adder24 : amc_cnn_16w16a_src_adder24_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage24_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(24)  -- sfix16_En1
              );

  u_Weight_Storage25 : amc_cnn_16w16a_src_Weight_Storage25_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage25_out1  -- sfix16_En15
              );

  u_adder25 : amc_cnn_16w16a_src_adder25_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage25_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(25)  -- sfix16_En1
              );

  u_Weight_Storage26 : amc_cnn_16w16a_src_Weight_Storage26_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage26_out1  -- sfix16_En15
              );

  u_adder26 : amc_cnn_16w16a_src_adder26_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage26_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(26)  -- sfix16_En1
              );

  u_Weight_Storage27 : amc_cnn_16w16a_src_Weight_Storage27_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage27_out1  -- sfix16_En15
              );

  u_adder27 : amc_cnn_16w16a_src_adder27_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage27_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(27)  -- sfix16_En1
              );

  u_Weight_Storage28 : amc_cnn_16w16a_src_Weight_Storage28_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage28_out1  -- sfix16_En15
              );

  u_adder28 : amc_cnn_16w16a_src_adder28_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage28_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(28)  -- sfix16_En1
              );

  u_Weight_Storage29 : amc_cnn_16w16a_src_Weight_Storage29_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage29_out1  -- sfix16_En15
              );

  u_adder29 : amc_cnn_16w16a_src_adder29_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage29_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(29)  -- sfix16_En1
              );

  u_Weight_Storage30 : amc_cnn_16w16a_src_Weight_Storage30_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage30_out1  -- sfix16_En15
              );

  u_adder30 : amc_cnn_16w16a_src_adder30_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage30_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(30)  -- sfix16_En1
              );

  u_Weight_Storage31 : amc_cnn_16w16a_src_Weight_Storage31_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage31_out1  -- sfix16_En15
              );

  u_adder31 : amc_cnn_16w16a_src_adder31_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage31_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(31)  -- sfix16_En1
              );

  u_Weight_Storage32 : amc_cnn_16w16a_src_Weight_Storage32_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage32_out1  -- sfix16_En15
              );

  u_adder32 : amc_cnn_16w16a_src_adder32_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage32_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(32)  -- sfix16_En1
              );

  u_Weight_Storage33 : amc_cnn_16w16a_src_Weight_Storage33_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage33_out1  -- sfix16_En15
              );

  u_adder33 : amc_cnn_16w16a_src_adder33_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage33_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(33)  -- sfix16_En1
              );

  u_Weight_Storage34 : amc_cnn_16w16a_src_Weight_Storage34_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage34_out1  -- sfix16_En15
              );

  u_adder34 : amc_cnn_16w16a_src_adder34_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage34_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(34)  -- sfix16_En1
              );

  u_Weight_Storage35 : amc_cnn_16w16a_src_Weight_Storage35_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage35_out1  -- sfix16_En15
              );

  u_adder35 : amc_cnn_16w16a_src_adder35_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage35_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(35)  -- sfix16_En1
              );

  u_Weight_Storage36 : amc_cnn_16w16a_src_Weight_Storage36_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage36_out1  -- sfix16_En15
              );

  u_adder36 : amc_cnn_16w16a_src_adder36_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage36_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(36)  -- sfix16_En1
              );

  u_Weight_Storage37 : amc_cnn_16w16a_src_Weight_Storage37_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage37_out1  -- sfix16_En15
              );

  u_adder37 : amc_cnn_16w16a_src_adder37_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage37_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(37)  -- sfix16_En1
              );

  u_Weight_Storage38 : amc_cnn_16w16a_src_Weight_Storage38_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage38_out1  -- sfix16_En15
              );

  u_adder38 : amc_cnn_16w16a_src_adder38_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage38_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(38)  -- sfix16_En1
              );

  u_Weight_Storage39 : amc_cnn_16w16a_src_Weight_Storage39_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage39_out1  -- sfix16_En15
              );

  u_adder39 : amc_cnn_16w16a_src_adder39_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage39_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(39)  -- sfix16_En1
              );

  u_Weight_Storage40 : amc_cnn_16w16a_src_Weight_Storage40_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage40_out1  -- sfix16_En15
              );

  u_adder40 : amc_cnn_16w16a_src_adder40_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage40_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(40)  -- sfix16_En1
              );

  u_Weight_Storage41 : amc_cnn_16w16a_src_Weight_Storage41_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage41_out1  -- sfix16_En15
              );

  u_adder41 : amc_cnn_16w16a_src_adder41_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage41_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(41)  -- sfix16_En1
              );

  u_Weight_Storage42 : amc_cnn_16w16a_src_Weight_Storage42_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage42_out1  -- sfix16_En15
              );

  u_adder42 : amc_cnn_16w16a_src_adder42_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage42_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(42)  -- sfix16_En1
              );

  u_Weight_Storage43 : amc_cnn_16w16a_src_Weight_Storage43_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage43_out1  -- sfix16_En15
              );

  u_adder43 : amc_cnn_16w16a_src_adder43_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage43_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(43)  -- sfix16_En1
              );

  u_Weight_Storage44 : amc_cnn_16w16a_src_Weight_Storage44_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage44_out1  -- sfix16_En15
              );

  u_adder44 : amc_cnn_16w16a_src_adder44_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage44_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(44)  -- sfix16_En1
              );

  u_Weight_Storage45 : amc_cnn_16w16a_src_Weight_Storage45_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage45_out1  -- sfix16_En15
              );

  u_adder45 : amc_cnn_16w16a_src_adder45_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage45_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(45)  -- sfix16_En1
              );

  u_Weight_Storage46 : amc_cnn_16w16a_src_Weight_Storage46_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage46_out1  -- sfix16_En15
              );

  u_adder46 : amc_cnn_16w16a_src_adder46_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage46_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(46)  -- sfix16_En1
              );

  u_Weight_Storage47 : amc_cnn_16w16a_src_Weight_Storage47_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage47_out1  -- sfix16_En15
              );

  u_adder47 : amc_cnn_16w16a_src_adder47_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage47_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(47)  -- sfix16_En1
              );

  u_Weight_Storage48 : amc_cnn_16w16a_src_Weight_Storage48_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage48_out1  -- sfix16_En15
              );

  u_adder48 : amc_cnn_16w16a_src_adder48_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage48_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(48)  -- sfix16_En1
              );

  u_Weight_Storage49 : amc_cnn_16w16a_src_Weight_Storage49_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage49_out1  -- sfix16_En15
              );

  u_adder49 : amc_cnn_16w16a_src_adder49_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage49_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(49)  -- sfix16_En1
              );

  u_Weight_Storage50 : amc_cnn_16w16a_src_Weight_Storage50_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage50_out1  -- sfix16_En15
              );

  u_adder50 : amc_cnn_16w16a_src_adder50_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage50_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(50)  -- sfix16_En1
              );

  u_Weight_Storage51 : amc_cnn_16w16a_src_Weight_Storage51_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage51_out1  -- sfix16_En15
              );

  u_adder51 : amc_cnn_16w16a_src_adder51_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage51_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(51)  -- sfix16_En1
              );

  u_Weight_Storage52 : amc_cnn_16w16a_src_Weight_Storage52_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage52_out1  -- sfix16_En15
              );

  u_adder52 : amc_cnn_16w16a_src_adder52_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage52_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(52)  -- sfix16_En1
              );

  u_Weight_Storage53 : amc_cnn_16w16a_src_Weight_Storage53_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage53_out1  -- sfix16_En15
              );

  u_adder53 : amc_cnn_16w16a_src_adder53_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage53_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(53)  -- sfix16_En1
              );

  u_Weight_Storage54 : amc_cnn_16w16a_src_Weight_Storage54_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage54_out1  -- sfix16_En15
              );

  u_adder54 : amc_cnn_16w16a_src_adder54_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage54_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(54)  -- sfix16_En1
              );

  u_Weight_Storage55 : amc_cnn_16w16a_src_Weight_Storage55_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage55_out1  -- sfix16_En15
              );

  u_adder55 : amc_cnn_16w16a_src_adder55_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage55_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(55)  -- sfix16_En1
              );

  u_Weight_Storage56 : amc_cnn_16w16a_src_Weight_Storage56_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage56_out1  -- sfix16_En15
              );

  u_adder56 : amc_cnn_16w16a_src_adder56_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage56_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(56)  -- sfix16_En1
              );

  u_Weight_Storage57 : amc_cnn_16w16a_src_Weight_Storage57_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage57_out1  -- sfix16_En15
              );

  u_adder57 : amc_cnn_16w16a_src_adder57_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage57_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(57)  -- sfix16_En1
              );

  u_Weight_Storage58 : amc_cnn_16w16a_src_Weight_Storage58_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage58_out1  -- sfix16_En15
              );

  u_adder58 : amc_cnn_16w16a_src_adder58_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage58_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(58)  -- sfix16_En1
              );

  u_Weight_Storage59 : amc_cnn_16w16a_src_Weight_Storage59_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage59_out1  -- sfix16_En15
              );

  u_adder59 : amc_cnn_16w16a_src_adder59_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage59_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(59)  -- sfix16_En1
              );

  u_Weight_Storage60 : amc_cnn_16w16a_src_Weight_Storage60_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage60_out1  -- sfix16_En15
              );

  u_adder60 : amc_cnn_16w16a_src_adder60_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage60_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(60)  -- sfix16_En1
              );

  u_Weight_Storage61 : amc_cnn_16w16a_src_Weight_Storage61_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage61_out1  -- sfix16_En15
              );

  u_adder61 : amc_cnn_16w16a_src_adder61_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage61_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(61)  -- sfix16_En1
              );

  u_Weight_Storage62 : amc_cnn_16w16a_src_Weight_Storage62_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage62_out1  -- sfix16_En15
              );

  u_adder62 : amc_cnn_16w16a_src_adder62_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage62_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(62)  -- sfix16_En1
              );

  u_Weight_Storage63 : amc_cnn_16w16a_src_Weight_Storage63_block
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage63_out1  -- sfix16_En15
              );

  u_adder63 : amc_cnn_16w16a_src_adder63_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage63_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(63)  -- sfix16_En1
              );

  u_Weight_Storage64 : amc_cnn_16w16a_src_Weight_Storage64
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage64_out1  -- sfix16_En15
              );

  u_adder64 : amc_cnn_16w16a_src_adder64
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage64_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(64)  -- sfix16_En1
              );

  u_Weight_Storage65 : amc_cnn_16w16a_src_Weight_Storage65
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage65_out1  -- sfix16_En15
              );

  u_adder65 : amc_cnn_16w16a_src_adder65
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage65_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(65)  -- sfix16_En1
              );

  u_Weight_Storage66 : amc_cnn_16w16a_src_Weight_Storage66
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage66_out1  -- sfix16_En15
              );

  u_adder66 : amc_cnn_16w16a_src_adder66
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage66_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(66)  -- sfix16_En1
              );

  u_Weight_Storage67 : amc_cnn_16w16a_src_Weight_Storage67
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage67_out1  -- sfix16_En15
              );

  u_adder67 : amc_cnn_16w16a_src_adder67
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage67_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(67)  -- sfix16_En1
              );

  u_Weight_Storage68 : amc_cnn_16w16a_src_Weight_Storage68
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage68_out1  -- sfix16_En15
              );

  u_adder68 : amc_cnn_16w16a_src_adder68
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage68_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(68)  -- sfix16_En1
              );

  u_Weight_Storage69 : amc_cnn_16w16a_src_Weight_Storage69
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage69_out1  -- sfix16_En15
              );

  u_adder69 : amc_cnn_16w16a_src_adder69
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage69_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(69)  -- sfix16_En1
              );

  u_Weight_Storage70 : amc_cnn_16w16a_src_Weight_Storage70
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage70_out1  -- sfix16_En15
              );

  u_adder70 : amc_cnn_16w16a_src_adder70
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage70_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(70)  -- sfix16_En1
              );

  u_Weight_Storage71 : amc_cnn_16w16a_src_Weight_Storage71
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage71_out1  -- sfix16_En15
              );

  u_adder71 : amc_cnn_16w16a_src_adder71
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage71_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(71)  -- sfix16_En1
              );

  u_Weight_Storage72 : amc_cnn_16w16a_src_Weight_Storage72
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage72_out1  -- sfix16_En15
              );

  u_adder72 : amc_cnn_16w16a_src_adder72
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage72_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(72)  -- sfix16_En1
              );

  u_Weight_Storage73 : amc_cnn_16w16a_src_Weight_Storage73
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage73_out1  -- sfix16_En15
              );

  u_adder73 : amc_cnn_16w16a_src_adder73
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage73_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(73)  -- sfix16_En1
              );

  u_Weight_Storage74 : amc_cnn_16w16a_src_Weight_Storage74
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage74_out1  -- sfix16_En15
              );

  u_adder74 : amc_cnn_16w16a_src_adder74
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage74_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(74)  -- sfix16_En1
              );

  u_Weight_Storage75 : amc_cnn_16w16a_src_Weight_Storage75
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage75_out1  -- sfix16_En15
              );

  u_adder75 : amc_cnn_16w16a_src_adder75
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage75_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(75)  -- sfix16_En1
              );

  u_Weight_Storage76 : amc_cnn_16w16a_src_Weight_Storage76
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage76_out1  -- sfix16_En15
              );

  u_adder76 : amc_cnn_16w16a_src_adder76
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage76_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(76)  -- sfix16_En1
              );

  u_Weight_Storage77 : amc_cnn_16w16a_src_Weight_Storage77
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage77_out1  -- sfix16_En15
              );

  u_adder77 : amc_cnn_16w16a_src_adder77
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage77_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(77)  -- sfix16_En1
              );

  u_Weight_Storage78 : amc_cnn_16w16a_src_Weight_Storage78
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage78_out1  -- sfix16_En15
              );

  u_adder78 : amc_cnn_16w16a_src_adder78
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage78_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(78)  -- sfix16_En1
              );

  u_Weight_Storage79 : amc_cnn_16w16a_src_Weight_Storage79
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage79_out1  -- sfix16_En15
              );

  u_adder79 : amc_cnn_16w16a_src_adder79
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage79_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(79)  -- sfix16_En1
              );

  u_Weight_Storage80 : amc_cnn_16w16a_src_Weight_Storage80
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage80_out1  -- sfix16_En15
              );

  u_adder80 : amc_cnn_16w16a_src_adder80
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage80_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(80)  -- sfix16_En1
              );

  u_Weight_Storage81 : amc_cnn_16w16a_src_Weight_Storage81
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage81_out1  -- sfix16_En15
              );

  u_adder81 : amc_cnn_16w16a_src_adder81
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage81_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(81)  -- sfix16_En1
              );

  u_Weight_Storage82 : amc_cnn_16w16a_src_Weight_Storage82
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage82_out1  -- sfix16_En15
              );

  u_adder82 : amc_cnn_16w16a_src_adder82
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage82_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(82)  -- sfix16_En1
              );

  u_Weight_Storage83 : amc_cnn_16w16a_src_Weight_Storage83
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage83_out1  -- sfix16_En15
              );

  u_adder83 : amc_cnn_16w16a_src_adder83
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage83_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(83)  -- sfix16_En1
              );

  u_Weight_Storage84 : amc_cnn_16w16a_src_Weight_Storage84
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage84_out1  -- sfix16_En15
              );

  u_adder84 : amc_cnn_16w16a_src_adder84
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage84_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(84)  -- sfix16_En1
              );

  u_Weight_Storage85 : amc_cnn_16w16a_src_Weight_Storage85
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage85_out1  -- sfix16_En15
              );

  u_adder85 : amc_cnn_16w16a_src_adder85
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage85_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(85)  -- sfix16_En1
              );

  u_Weight_Storage86 : amc_cnn_16w16a_src_Weight_Storage86
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage86_out1  -- sfix16_En15
              );

  u_adder86 : amc_cnn_16w16a_src_adder86
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage86_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(86)  -- sfix16_En1
              );

  u_Weight_Storage87 : amc_cnn_16w16a_src_Weight_Storage87
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage87_out1  -- sfix16_En15
              );

  u_adder87 : amc_cnn_16w16a_src_adder87
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage87_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(87)  -- sfix16_En1
              );

  u_Weight_Storage88 : amc_cnn_16w16a_src_Weight_Storage88
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage88_out1  -- sfix16_En15
              );

  u_adder88 : amc_cnn_16w16a_src_adder88
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage88_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(88)  -- sfix16_En1
              );

  u_Weight_Storage89 : amc_cnn_16w16a_src_Weight_Storage89
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage89_out1  -- sfix16_En15
              );

  u_adder89 : amc_cnn_16w16a_src_adder89
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage89_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(89)  -- sfix16_En1
              );

  u_Weight_Storage90 : amc_cnn_16w16a_src_Weight_Storage90
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage90_out1  -- sfix16_En15
              );

  u_adder90 : amc_cnn_16w16a_src_adder90
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage90_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(90)  -- sfix16_En1
              );

  u_Weight_Storage91 : amc_cnn_16w16a_src_Weight_Storage91
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage91_out1  -- sfix16_En15
              );

  u_adder91 : amc_cnn_16w16a_src_adder91
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage91_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(91)  -- sfix16_En1
              );

  u_Weight_Storage92 : amc_cnn_16w16a_src_Weight_Storage92
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage92_out1  -- sfix16_En15
              );

  u_adder92 : amc_cnn_16w16a_src_adder92
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage92_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(92)  -- sfix16_En1
              );

  u_Weight_Storage93 : amc_cnn_16w16a_src_Weight_Storage93
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage93_out1  -- sfix16_En15
              );

  u_adder93 : amc_cnn_16w16a_src_adder93
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage93_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(93)  -- sfix16_En1
              );

  u_Weight_Storage94 : amc_cnn_16w16a_src_Weight_Storage94
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage94_out1  -- sfix16_En15
              );

  u_adder94 : amc_cnn_16w16a_src_adder94
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage94_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(94)  -- sfix16_En1
              );

  u_Weight_Storage95 : amc_cnn_16w16a_src_Weight_Storage95
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage95_out1  -- sfix16_En15
              );

  u_adder95 : amc_cnn_16w16a_src_adder95
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage95_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(95)  -- sfix16_En1
              );

  u_Weight_Storage96 : amc_cnn_16w16a_src_Weight_Storage96
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage96_out1  -- sfix16_En15
              );

  u_adder96 : amc_cnn_16w16a_src_adder96
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage96_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(96)  -- sfix16_En1
              );

  u_Weight_Storage97 : amc_cnn_16w16a_src_Weight_Storage97
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage97_out1  -- sfix16_En15
              );

  u_adder97 : amc_cnn_16w16a_src_adder97
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage97_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(97)  -- sfix16_En1
              );

  u_Weight_Storage98 : amc_cnn_16w16a_src_Weight_Storage98
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage98_out1  -- sfix16_En15
              );

  u_adder98 : amc_cnn_16w16a_src_adder98
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage98_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(98)  -- sfix16_En1
              );

  u_Weight_Storage99 : amc_cnn_16w16a_src_Weight_Storage99
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage99_out1  -- sfix16_En15
              );

  u_adder99 : amc_cnn_16w16a_src_adder99
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage99_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(99)  -- sfix16_En1
              );

  u_Weight_Storage100 : amc_cnn_16w16a_src_Weight_Storage100
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage100_out1  -- sfix16_En15
              );

  u_adder100 : amc_cnn_16w16a_src_adder100
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage100_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(100)  -- sfix16_En1
              );

  u_Weight_Storage101 : amc_cnn_16w16a_src_Weight_Storage101
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage101_out1  -- sfix16_En15
              );

  u_adder101 : amc_cnn_16w16a_src_adder101
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage101_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(101)  -- sfix16_En1
              );

  u_Weight_Storage102 : amc_cnn_16w16a_src_Weight_Storage102
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage102_out1  -- sfix16_En15
              );

  u_adder102 : amc_cnn_16w16a_src_adder102
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage102_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(102)  -- sfix16_En1
              );

  u_Weight_Storage103 : amc_cnn_16w16a_src_Weight_Storage103
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage103_out1  -- sfix16_En15
              );

  u_adder103 : amc_cnn_16w16a_src_adder103
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage103_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(103)  -- sfix16_En1
              );

  u_Weight_Storage104 : amc_cnn_16w16a_src_Weight_Storage104
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage104_out1  -- sfix16_En15
              );

  u_adder104 : amc_cnn_16w16a_src_adder104
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage104_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(104)  -- sfix16_En1
              );

  u_Weight_Storage105 : amc_cnn_16w16a_src_Weight_Storage105
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage105_out1  -- sfix16_En15
              );

  u_adder105 : amc_cnn_16w16a_src_adder105
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage105_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(105)  -- sfix16_En1
              );

  u_Weight_Storage106 : amc_cnn_16w16a_src_Weight_Storage106
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage106_out1  -- sfix16_En15
              );

  u_adder106 : amc_cnn_16w16a_src_adder106
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage106_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(106)  -- sfix16_En1
              );

  u_Weight_Storage107 : amc_cnn_16w16a_src_Weight_Storage107
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage107_out1  -- sfix16_En15
              );

  u_adder107 : amc_cnn_16w16a_src_adder107
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage107_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(107)  -- sfix16_En1
              );

  u_Weight_Storage108 : amc_cnn_16w16a_src_Weight_Storage108
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage108_out1  -- sfix16_En15
              );

  u_adder108 : amc_cnn_16w16a_src_adder108
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage108_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(108)  -- sfix16_En1
              );

  u_Weight_Storage109 : amc_cnn_16w16a_src_Weight_Storage109
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage109_out1  -- sfix16_En15
              );

  u_adder109 : amc_cnn_16w16a_src_adder109
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage109_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(109)  -- sfix16_En1
              );

  u_Weight_Storage110 : amc_cnn_16w16a_src_Weight_Storage110
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage110_out1  -- sfix16_En15
              );

  u_adder110 : amc_cnn_16w16a_src_adder110
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage110_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(110)  -- sfix16_En1
              );

  u_Weight_Storage111 : amc_cnn_16w16a_src_Weight_Storage111
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage111_out1  -- sfix16_En15
              );

  u_adder111 : amc_cnn_16w16a_src_adder111
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage111_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(111)  -- sfix16_En1
              );

  u_Weight_Storage112 : amc_cnn_16w16a_src_Weight_Storage112
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage112_out1  -- sfix16_En15
              );

  u_adder112 : amc_cnn_16w16a_src_adder112
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage112_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(112)  -- sfix16_En1
              );

  u_Weight_Storage113 : amc_cnn_16w16a_src_Weight_Storage113
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage113_out1  -- sfix16_En15
              );

  u_adder113 : amc_cnn_16w16a_src_adder113
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage113_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(113)  -- sfix16_En1
              );

  u_Weight_Storage114 : amc_cnn_16w16a_src_Weight_Storage114
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage114_out1  -- sfix16_En15
              );

  u_adder114 : amc_cnn_16w16a_src_adder114
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage114_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(114)  -- sfix16_En1
              );

  u_Weight_Storage115 : amc_cnn_16w16a_src_Weight_Storage115
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage115_out1  -- sfix16_En15
              );

  u_adder115 : amc_cnn_16w16a_src_adder115
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage115_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(115)  -- sfix16_En1
              );

  u_Weight_Storage116 : amc_cnn_16w16a_src_Weight_Storage116
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage116_out1  -- sfix16_En15
              );

  u_adder116 : amc_cnn_16w16a_src_adder116
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage116_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(116)  -- sfix16_En1
              );

  u_Weight_Storage117 : amc_cnn_16w16a_src_Weight_Storage117
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage117_out1  -- sfix16_En15
              );

  u_adder117 : amc_cnn_16w16a_src_adder117
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage117_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(117)  -- sfix16_En1
              );

  u_Weight_Storage118 : amc_cnn_16w16a_src_Weight_Storage118
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage118_out1  -- sfix16_En15
              );

  u_adder118 : amc_cnn_16w16a_src_adder118
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage118_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(118)  -- sfix16_En1
              );

  u_Weight_Storage119 : amc_cnn_16w16a_src_Weight_Storage119
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage119_out1  -- sfix16_En15
              );

  u_adder119 : amc_cnn_16w16a_src_adder119
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage119_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(119)  -- sfix16_En1
              );

  u_Weight_Storage120 : amc_cnn_16w16a_src_Weight_Storage120
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage120_out1  -- sfix16_En15
              );

  u_adder120 : amc_cnn_16w16a_src_adder120
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage120_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(120)  -- sfix16_En1
              );

  u_Weight_Storage121 : amc_cnn_16w16a_src_Weight_Storage121
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage121_out1  -- sfix16_En15
              );

  u_adder121 : amc_cnn_16w16a_src_adder121
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage121_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(121)  -- sfix16_En1
              );

  u_Weight_Storage122 : amc_cnn_16w16a_src_Weight_Storage122
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage122_out1  -- sfix16_En15
              );

  u_adder122 : amc_cnn_16w16a_src_adder122
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage122_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(122)  -- sfix16_En1
              );

  u_Weight_Storage123 : amc_cnn_16w16a_src_Weight_Storage123
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage123_out1  -- sfix16_En15
              );

  u_adder123 : amc_cnn_16w16a_src_adder123
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage123_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(123)  -- sfix16_En1
              );

  u_Weight_Storage124 : amc_cnn_16w16a_src_Weight_Storage124
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage124_out1  -- sfix16_En15
              );

  u_adder124 : amc_cnn_16w16a_src_adder124
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage124_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(124)  -- sfix16_En1
              );

  u_Weight_Storage125 : amc_cnn_16w16a_src_Weight_Storage125
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage125_out1  -- sfix16_En15
              );

  u_adder125 : amc_cnn_16w16a_src_adder125
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage125_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(125)  -- sfix16_En1
              );

  u_Weight_Storage126 : amc_cnn_16w16a_src_Weight_Storage126
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage126_out1  -- sfix16_En15
              );

  u_adder126 : amc_cnn_16w16a_src_adder126
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage126_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(126)  -- sfix16_En1
              );

  u_Weight_Storage127 : amc_cnn_16w16a_src_Weight_Storage127
    PORT MAP( clk => clk,
              enb => enb,
              count_Weights => std_logic_vector(count_Weights),  -- ufix11
              Out1 => Weight_Storage127_out1  -- sfix16_En15
              );

  u_adder127 : amc_cnn_16w16a_src_adder127
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In1 => Weight_Storage127_out1,  -- sfix16_En15
              In2 => std_logic_vector(sampleIn),  -- int16
              In3 => valid_1,
              dataOut => dataOut_tmp(127)  -- sfix16_En1
              );

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 1983
  HDL_Counter_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        count_Weights <= to_unsigned(16#000#, 11);
      ELSIF enb = '1' THEN
        IF valid = '1' THEN 
          IF count_Weights >= to_unsigned(16#7BF#, 11) THEN 
            count_Weights <= to_unsigned(16#000#, 11);
          ELSE 
            count_Weights <= count_Weights + to_unsigned(16#001#, 11);
          END IF;
        END IF;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  dataIn_signed <= signed(dataIn);

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        sampleIn <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        sampleIn <= dataIn_signed;
      END IF;
    END IF;
  END PROCESS Delay_process;


  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        valid_1 <= '0';
      ELSIF enb = '1' THEN
        valid_1 <= valid;
      END IF;
    END IF;
  END PROCESS Delay1_process;



  dataOut <= dataOut_tmp;

END rtl;

