-- ------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/ddcduc/DUC_src_FIR_Interpolation
-- Created: 2023-01-04 14:48:28
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- ------------------------------------------------------------
-- 
-- 
-- ------------------------------------------------------------
-- 
-- Module: DUC_src_FIR_Interpolation
-- Source Path: /DUC_src_FIR_Interpolation
-- 
-- ------------------------------------------------------------
-- 
-- HDL Implementation    : Fully parallel
-- Folding Factor        : 1
-- Multipliers           : 56


LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.numeric_std.ALL;

ENTITY DUC_src_FIR_Interpolation IS
   PORT( clk                             :   IN    std_logic; 
         enb_1_16_1                      :   IN    std_logic; 
         reset                           :   IN    std_logic; 
         DUC_src_FIR_Interpolation_in_re :   IN    std_logic_vector(15 DOWNTO 0); -- sfix16_En15
         DUC_src_FIR_Interpolation_in_im :   IN    std_logic_vector(15 DOWNTO 0); -- sfix16_En15
         DUC_src_FIR_Interpolation_out_re:   OUT   std_logic_vector(17 DOWNTO 0); -- sfix18_En16
         DUC_src_FIR_Interpolation_out_im:   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En16
         );

END DUC_src_FIR_Interpolation;


----------------------------------------------------------------
--Module Architecture: DUC_src_FIR_Interpolation
----------------------------------------------------------------
ARCHITECTURE rtl OF DUC_src_FIR_Interpolation IS
  -- Local Functions
  -- Type Definitions
  TYPE delay_pipeline_type IS ARRAY (NATURAL range <>) OF signed(15 DOWNTO 0); -- sfix16_En15
  -- Constants
  CONSTANT coeffphase1_1                  : signed(15 DOWNTO 0) := to_signed(49, 16); -- sfix16_En16
  CONSTANT coeffphase1_2                  : signed(15 DOWNTO 0) := to_signed(463, 16); -- sfix16_En16
  CONSTANT coeffphase1_3                  : signed(15 DOWNTO 0) := to_signed(115, 16); -- sfix16_En16
  CONSTANT coeffphase1_4                  : signed(15 DOWNTO 0) := to_signed(-295, 16); -- sfix16_En16
  CONSTANT coeffphase1_5                  : signed(15 DOWNTO 0) := to_signed(473, 16); -- sfix16_En16
  CONSTANT coeffphase1_6                  : signed(15 DOWNTO 0) := to_signed(-624, 16); -- sfix16_En16
  CONSTANT coeffphase1_7                  : signed(15 DOWNTO 0) := to_signed(669, 16); -- sfix16_En16
  CONSTANT coeffphase1_8                  : signed(15 DOWNTO 0) := to_signed(-524, 16); -- sfix16_En16
  CONSTANT coeffphase1_9                  : signed(15 DOWNTO 0) := to_signed(112, 16); -- sfix16_En16
  CONSTANT coeffphase1_10                 : signed(15 DOWNTO 0) := to_signed(626, 16); -- sfix16_En16
  CONSTANT coeffphase1_11                 : signed(15 DOWNTO 0) := to_signed(-1738, 16); -- sfix16_En16
  CONSTANT coeffphase1_12                 : signed(15 DOWNTO 0) := to_signed(3324, 16); -- sfix16_En16
  CONSTANT coeffphase1_13                 : signed(15 DOWNTO 0) := to_signed(-5805, 16); -- sfix16_En16
  CONSTANT coeffphase1_14                 : signed(15 DOWNTO 0) := to_signed(12336, 16); -- sfix16_En16
  CONSTANT coeffphase1_15                 : signed(15 DOWNTO 0) := to_signed(26242, 16); -- sfix16_En16
  CONSTANT coeffphase1_16                 : signed(15 DOWNTO 0) := to_signed(-2129, 16); -- sfix16_En16
  CONSTANT coeffphase1_17                 : signed(15 DOWNTO 0) := to_signed(-704, 16); -- sfix16_En16
  CONSTANT coeffphase1_18                 : signed(15 DOWNTO 0) := to_signed(1616, 16); -- sfix16_En16
  CONSTANT coeffphase1_19                 : signed(15 DOWNTO 0) := to_signed(-1787, 16); -- sfix16_En16
  CONSTANT coeffphase1_20                 : signed(15 DOWNTO 0) := to_signed(1568, 16); -- sfix16_En16
  CONSTANT coeffphase1_21                 : signed(15 DOWNTO 0) := to_signed(-1153, 16); -- sfix16_En16
  CONSTANT coeffphase1_22                 : signed(15 DOWNTO 0) := to_signed(686, 16); -- sfix16_En16
  CONSTANT coeffphase1_23                 : signed(15 DOWNTO 0) := to_signed(-269, 16); -- sfix16_En16
  CONSTANT coeffphase1_24                 : signed(15 DOWNTO 0) := to_signed(-38, 16); -- sfix16_En16
  CONSTANT coeffphase1_25                 : signed(15 DOWNTO 0) := to_signed(224, 16); -- sfix16_En16
  CONSTANT coeffphase1_26                 : signed(15 DOWNTO 0) := to_signed(-330, 16); -- sfix16_En16
  CONSTANT coeffphase1_27                 : signed(15 DOWNTO 0) := to_signed(484, 16); -- sfix16_En16
  CONSTANT coeffphase1_28                 : signed(15 DOWNTO 0) := to_signed(228, 16); -- sfix16_En16
  CONSTANT coeffphase2_1                  : signed(15 DOWNTO 0) := to_signed(228, 16); -- sfix16_En16
  CONSTANT coeffphase2_2                  : signed(15 DOWNTO 0) := to_signed(484, 16); -- sfix16_En16
  CONSTANT coeffphase2_3                  : signed(15 DOWNTO 0) := to_signed(-330, 16); -- sfix16_En16
  CONSTANT coeffphase2_4                  : signed(15 DOWNTO 0) := to_signed(224, 16); -- sfix16_En16
  CONSTANT coeffphase2_5                  : signed(15 DOWNTO 0) := to_signed(-38, 16); -- sfix16_En16
  CONSTANT coeffphase2_6                  : signed(15 DOWNTO 0) := to_signed(-269, 16); -- sfix16_En16
  CONSTANT coeffphase2_7                  : signed(15 DOWNTO 0) := to_signed(686, 16); -- sfix16_En16
  CONSTANT coeffphase2_8                  : signed(15 DOWNTO 0) := to_signed(-1153, 16); -- sfix16_En16
  CONSTANT coeffphase2_9                  : signed(15 DOWNTO 0) := to_signed(1568, 16); -- sfix16_En16
  CONSTANT coeffphase2_10                 : signed(15 DOWNTO 0) := to_signed(-1787, 16); -- sfix16_En16
  CONSTANT coeffphase2_11                 : signed(15 DOWNTO 0) := to_signed(1616, 16); -- sfix16_En16
  CONSTANT coeffphase2_12                 : signed(15 DOWNTO 0) := to_signed(-704, 16); -- sfix16_En16
  CONSTANT coeffphase2_13                 : signed(15 DOWNTO 0) := to_signed(-2129, 16); -- sfix16_En16
  CONSTANT coeffphase2_14                 : signed(15 DOWNTO 0) := to_signed(26242, 16); -- sfix16_En16
  CONSTANT coeffphase2_15                 : signed(15 DOWNTO 0) := to_signed(12336, 16); -- sfix16_En16
  CONSTANT coeffphase2_16                 : signed(15 DOWNTO 0) := to_signed(-5805, 16); -- sfix16_En16
  CONSTANT coeffphase2_17                 : signed(15 DOWNTO 0) := to_signed(3324, 16); -- sfix16_En16
  CONSTANT coeffphase2_18                 : signed(15 DOWNTO 0) := to_signed(-1738, 16); -- sfix16_En16
  CONSTANT coeffphase2_19                 : signed(15 DOWNTO 0) := to_signed(626, 16); -- sfix16_En16
  CONSTANT coeffphase2_20                 : signed(15 DOWNTO 0) := to_signed(112, 16); -- sfix16_En16
  CONSTANT coeffphase2_21                 : signed(15 DOWNTO 0) := to_signed(-524, 16); -- sfix16_En16
  CONSTANT coeffphase2_22                 : signed(15 DOWNTO 0) := to_signed(669, 16); -- sfix16_En16
  CONSTANT coeffphase2_23                 : signed(15 DOWNTO 0) := to_signed(-624, 16); -- sfix16_En16
  CONSTANT coeffphase2_24                 : signed(15 DOWNTO 0) := to_signed(473, 16); -- sfix16_En16
  CONSTANT coeffphase2_25                 : signed(15 DOWNTO 0) := to_signed(-295, 16); -- sfix16_En16
  CONSTANT coeffphase2_26                 : signed(15 DOWNTO 0) := to_signed(115, 16); -- sfix16_En16
  CONSTANT coeffphase2_27                 : signed(15 DOWNTO 0) := to_signed(463, 16); -- sfix16_En16
  CONSTANT coeffphase2_28                 : signed(15 DOWNTO 0) := to_signed(49, 16); -- sfix16_En16

  -- Signals
  SIGNAL cur_count                        : unsigned(1 DOWNTO 0); -- ufix2
  SIGNAL phase_1                          : std_logic; -- boolean
  SIGNAL delay_pipeline_re                : delay_pipeline_type(0 TO 26); -- sfix16_En15
  SIGNAL delay_pipeline_im                : delay_pipeline_type(0 TO 26); -- sfix16_En15
  SIGNAL DUC_src_FIR_Interpolation_in_regtype_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL DUC_src_FIR_Interpolation_in_regtype_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_re                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_im                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux                      : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_26_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_26_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_pipe                 : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_re_pipe_re               : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_re_pipe_im               : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_1_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_1_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_1                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_25_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_25_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_1_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_1_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_1_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_2_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_2_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_2                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_24_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_24_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_2_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_2_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_2_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_3_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_3_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_3                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_23_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_23_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_3_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_3_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_3_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_4_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_4_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_4                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_22_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_22_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_4_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_4_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_4_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_5_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_5_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_5                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_21_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_21_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_5_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_5_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_5_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_6_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_6_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_6                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_20_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_20_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_6_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_6_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_6_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_7_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_7_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_7                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_19_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_19_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_7_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_7_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_7_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_8_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_8_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_8                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_18_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_18_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_8_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_8_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_8_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_9_re                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_9_im                     : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_9                    : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_17_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_17_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_9_pipe               : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_9_re_pipe_re             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_9_re_pipe_im             : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_10_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_10_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_10                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_16_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_16_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_10_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_10_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_10_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_11_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_11_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_11                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_15_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_15_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_11_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_11_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_11_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_12_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_12_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_12                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_14_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_14_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_12_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_12_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_12_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_13_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_13_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_13                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_13_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_13_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_13_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_13_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_13_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_14_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_14_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_14                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_12_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_12_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_14_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_14_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_14_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_15_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_15_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_15                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_11_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_11_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_15_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_15_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_15_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_16_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_16_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_16                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_10_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_10_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_16_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_16_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_16_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_17_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_17_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_17                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_9_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_9_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_17_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_17_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_17_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_18_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_18_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_18                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_8_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_8_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_18_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_18_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_18_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_19_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_19_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_19                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_7_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_7_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_19_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_19_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_19_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_20_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_20_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_20                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_6_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_6_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_20_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_20_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_20_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_21_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_21_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_21                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_5_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_5_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_21_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_21_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_21_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_22_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_22_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_22                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_4_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_4_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_22_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_22_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_22_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_23_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_23_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_23                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_3_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_3_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_23_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_23_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_23_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_24_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_24_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_24                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_2_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_2_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_24_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_24_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_24_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_25_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_25_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_25                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_1_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_1_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_25_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_25_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_25_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_26_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_26_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_26                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL delay_pipeline_re_0_under_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL delay_pipeline_re_0_under_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_26_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_26_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_26_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_27_re                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_27_im                    : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_mux_27                   : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL DUC_src_FIR_Interpolation_in_regtype_re_pipe_re : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL DUC_src_FIR_Interpolation_in_regtype_re_pipe_im : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product_mux_27_pipe              : signed(15 DOWNTO 0); -- sfix16_En16
  SIGNAL product_27_re_pipe_re            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product_27_re_pipe_im            : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum1_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_1                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp                         : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_2                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_3                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_1                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum2_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum2_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_4                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_5                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_2                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_6                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_7                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_3                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum3_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum3_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_8                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_9                       : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_4                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_10                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_11                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_5                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum4_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum4_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_12                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_13                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_6                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_14                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_15                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_7                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum5_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum5_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_16                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_17                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_8                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_18                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_19                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_9                       : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum6_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum6_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_20                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_21                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_10                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_22                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_23                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_11                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum7_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum7_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_24                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_25                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_12                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_26                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_27                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_13                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum8_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum8_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_28                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_29                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_14                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_30                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_31                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_15                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum9_re                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum9_im                          : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_32                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_33                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_16                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_34                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_35                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_17                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum10_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum10_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_36                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_37                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_18                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_38                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_39                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_19                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum11_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum11_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_40                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_41                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_20                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_42                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_43                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_21                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum12_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum12_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_44                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_45                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_22                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_46                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_47                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_23                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum13_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum13_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_48                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_49                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_24                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_50                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_51                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_25                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum14_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum14_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_52                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_53                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_26                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_54                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_55                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_27                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum15_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum15_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_56                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_57                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_28                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_58                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_59                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_29                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum16_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum16_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_60                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_61                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_30                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_62                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_63                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_31                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum17_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum17_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_64                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_65                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_32                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_66                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_67                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_33                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum18_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum18_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_68                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_69                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_34                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_70                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_71                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_35                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum19_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum19_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_72                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_73                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_36                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_74                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_75                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_37                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum20_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum20_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_76                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_77                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_38                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_78                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_79                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_39                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum21_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum21_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_80                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_81                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_40                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_82                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_83                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_41                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum22_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum22_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_84                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_85                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_42                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_86                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_87                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_43                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum23_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum23_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_88                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_89                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_44                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_90                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_91                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_45                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum24_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum24_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_92                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_93                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_46                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_94                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_95                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_47                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum25_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum25_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_96                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_97                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_48                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_98                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_99                      : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_49                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum26_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum26_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_100                     : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_101                     : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_50                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_102                     : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_103                     : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_51                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL sum27_re                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL sum27_im                         : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_104                     : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_105                     : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_52                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL add_cast_106                     : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_cast_107                     : signed(36 DOWNTO 0); -- sfix37_En31
  SIGNAL add_temp_53                      : signed(37 DOWNTO 0); -- sfix38_En31
  SIGNAL output_typeconvert_re            : signed(17 DOWNTO 0); -- sfix18_En16
  SIGNAL output_typeconvert_im            : signed(17 DOWNTO 0); -- sfix18_En16
  SIGNAL regout_re                        : signed(17 DOWNTO 0); -- sfix18_En16
  SIGNAL regout_im                        : signed(17 DOWNTO 0); -- sfix18_En16
  SIGNAL muxout_re                        : signed(17 DOWNTO 0); -- sfix18_En16
  SIGNAL muxout_im                        : signed(17 DOWNTO 0); -- sfix18_En16


BEGIN

  -- Block Statements
  ce_output : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      cur_count <= to_unsigned(0, 2);
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        IF cur_count >= to_unsigned(1, 2) THEN
          cur_count <= to_unsigned(0, 2);
        ELSE
          cur_count <= cur_count + to_unsigned(1, 2);
        END IF;
      END IF;
    END IF; 
  END PROCESS ce_output;

  phase_1 <= '1' WHEN cur_count = to_unsigned(1, 2) AND enb_1_16_1 = '1' ELSE '0';

  --   ---------------- Delay Registers ----------------

  Delay_Pipeline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re(0 TO 26) <= (OTHERS => (OTHERS => '0'));
      delay_pipeline_im(0 TO 26) <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF phase_1 = '1' THEN
        delay_pipeline_re(0) <= signed(DUC_src_FIR_Interpolation_in_re);
        delay_pipeline_re(1 TO 26) <= delay_pipeline_re(0 TO 25);
        delay_pipeline_im(0) <= signed(DUC_src_FIR_Interpolation_in_im);
        delay_pipeline_im(1 TO 26) <= delay_pipeline_im(0 TO 25);
      END IF;
    END IF; 
  END PROCESS Delay_Pipeline_process;

  DUC_src_FIR_Interpolation_in_regtype_re <= signed(DUC_src_FIR_Interpolation_in_re);
  DUC_src_FIR_Interpolation_in_regtype_im <= signed(DUC_src_FIR_Interpolation_in_im);

  product_mux <= coeffphase1_28 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                      coeffphase2_28;
  temp_process8 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_26_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_26_under_pipe_im <= (OTHERS => '0');
      product_mux_pipe <= (OTHERS => '0');
      product_re_pipe_re <= (OTHERS => '0');
      product_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_26_under_pipe_re <= delay_pipeline_re(26);
        delay_pipeline_re_26_under_pipe_im <= delay_pipeline_im(26);
        product_mux_pipe <= product_mux;

        product_re_pipe_re <= delay_pipeline_re_26_under_pipe_re * product_mux_pipe;
        product_re_pipe_im <= delay_pipeline_re_26_under_pipe_im * product_mux_pipe;

      END IF;
    END IF;
  END PROCESS temp_process8;

  product_re <= product_re_pipe_re;
  product_im <= product_re_pipe_im;

  product_mux_1 <= coeffphase1_27 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_27;
  temp_process9 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_25_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_25_under_pipe_im <= (OTHERS => '0');
      product_mux_1_pipe <= (OTHERS => '0');
      product_1_re_pipe_re <= (OTHERS => '0');
      product_1_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_25_under_pipe_re <= delay_pipeline_re(25);
        delay_pipeline_re_25_under_pipe_im <= delay_pipeline_im(25);
        product_mux_1_pipe <= product_mux_1;

        product_1_re_pipe_re <= delay_pipeline_re_25_under_pipe_re * product_mux_1_pipe;
        product_1_re_pipe_im <= delay_pipeline_re_25_under_pipe_im * product_mux_1_pipe;

      END IF;
    END IF;
  END PROCESS temp_process9;

  product_1_re <= product_1_re_pipe_re;
  product_1_im <= product_1_re_pipe_im;

  product_mux_2 <= coeffphase1_26 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_26;
  temp_process10 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_24_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_24_under_pipe_im <= (OTHERS => '0');
      product_mux_2_pipe <= (OTHERS => '0');
      product_2_re_pipe_re <= (OTHERS => '0');
      product_2_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_24_under_pipe_re <= delay_pipeline_re(24);
        delay_pipeline_re_24_under_pipe_im <= delay_pipeline_im(24);
        product_mux_2_pipe <= product_mux_2;

        product_2_re_pipe_re <= delay_pipeline_re_24_under_pipe_re * product_mux_2_pipe;
        product_2_re_pipe_im <= delay_pipeline_re_24_under_pipe_im * product_mux_2_pipe;

      END IF;
    END IF;
  END PROCESS temp_process10;

  product_2_re <= product_2_re_pipe_re;
  product_2_im <= product_2_re_pipe_im;

  product_mux_3 <= coeffphase1_25 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_25;
  temp_process11 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_23_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_23_under_pipe_im <= (OTHERS => '0');
      product_mux_3_pipe <= (OTHERS => '0');
      product_3_re_pipe_re <= (OTHERS => '0');
      product_3_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_23_under_pipe_re <= delay_pipeline_re(23);
        delay_pipeline_re_23_under_pipe_im <= delay_pipeline_im(23);
        product_mux_3_pipe <= product_mux_3;

        product_3_re_pipe_re <= delay_pipeline_re_23_under_pipe_re * product_mux_3_pipe;
        product_3_re_pipe_im <= delay_pipeline_re_23_under_pipe_im * product_mux_3_pipe;

      END IF;
    END IF;
  END PROCESS temp_process11;

  product_3_re <= product_3_re_pipe_re;
  product_3_im <= product_3_re_pipe_im;

  product_mux_4 <= coeffphase1_24 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_24;
  temp_process12 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_22_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_22_under_pipe_im <= (OTHERS => '0');
      product_mux_4_pipe <= (OTHERS => '0');
      product_4_re_pipe_re <= (OTHERS => '0');
      product_4_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_22_under_pipe_re <= delay_pipeline_re(22);
        delay_pipeline_re_22_under_pipe_im <= delay_pipeline_im(22);
        product_mux_4_pipe <= product_mux_4;

        product_4_re_pipe_re <= delay_pipeline_re_22_under_pipe_re * product_mux_4_pipe;
        product_4_re_pipe_im <= delay_pipeline_re_22_under_pipe_im * product_mux_4_pipe;

      END IF;
    END IF;
  END PROCESS temp_process12;

  product_4_re <= product_4_re_pipe_re;
  product_4_im <= product_4_re_pipe_im;

  product_mux_5 <= coeffphase1_23 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_23;
  temp_process13 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_21_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_21_under_pipe_im <= (OTHERS => '0');
      product_mux_5_pipe <= (OTHERS => '0');
      product_5_re_pipe_re <= (OTHERS => '0');
      product_5_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_21_under_pipe_re <= delay_pipeline_re(21);
        delay_pipeline_re_21_under_pipe_im <= delay_pipeline_im(21);
        product_mux_5_pipe <= product_mux_5;

        product_5_re_pipe_re <= delay_pipeline_re_21_under_pipe_re * product_mux_5_pipe;
        product_5_re_pipe_im <= delay_pipeline_re_21_under_pipe_im * product_mux_5_pipe;

      END IF;
    END IF;
  END PROCESS temp_process13;

  product_5_re <= product_5_re_pipe_re;
  product_5_im <= product_5_re_pipe_im;

  product_mux_6 <= coeffphase1_22 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_22;
  temp_process14 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_20_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_20_under_pipe_im <= (OTHERS => '0');
      product_mux_6_pipe <= (OTHERS => '0');
      product_6_re_pipe_re <= (OTHERS => '0');
      product_6_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_20_under_pipe_re <= delay_pipeline_re(20);
        delay_pipeline_re_20_under_pipe_im <= delay_pipeline_im(20);
        product_mux_6_pipe <= product_mux_6;

        product_6_re_pipe_re <= delay_pipeline_re_20_under_pipe_re * product_mux_6_pipe;
        product_6_re_pipe_im <= delay_pipeline_re_20_under_pipe_im * product_mux_6_pipe;

      END IF;
    END IF;
  END PROCESS temp_process14;

  product_6_re <= product_6_re_pipe_re;
  product_6_im <= product_6_re_pipe_im;

  product_mux_7 <= coeffphase1_21 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_21;
  temp_process15 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_19_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_19_under_pipe_im <= (OTHERS => '0');
      product_mux_7_pipe <= (OTHERS => '0');
      product_7_re_pipe_re <= (OTHERS => '0');
      product_7_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_19_under_pipe_re <= delay_pipeline_re(19);
        delay_pipeline_re_19_under_pipe_im <= delay_pipeline_im(19);
        product_mux_7_pipe <= product_mux_7;

        product_7_re_pipe_re <= delay_pipeline_re_19_under_pipe_re * product_mux_7_pipe;
        product_7_re_pipe_im <= delay_pipeline_re_19_under_pipe_im * product_mux_7_pipe;

      END IF;
    END IF;
  END PROCESS temp_process15;

  product_7_re <= product_7_re_pipe_re;
  product_7_im <= product_7_re_pipe_im;

  product_mux_8 <= coeffphase1_20 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_20;
  temp_process16 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_18_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_18_under_pipe_im <= (OTHERS => '0');
      product_mux_8_pipe <= (OTHERS => '0');
      product_8_re_pipe_re <= (OTHERS => '0');
      product_8_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_18_under_pipe_re <= delay_pipeline_re(18);
        delay_pipeline_re_18_under_pipe_im <= delay_pipeline_im(18);
        product_mux_8_pipe <= product_mux_8;

        product_8_re_pipe_re <= delay_pipeline_re_18_under_pipe_re * product_mux_8_pipe;
        product_8_re_pipe_im <= delay_pipeline_re_18_under_pipe_im * product_mux_8_pipe;

      END IF;
    END IF;
  END PROCESS temp_process16;

  product_8_re <= product_8_re_pipe_re;
  product_8_im <= product_8_re_pipe_im;

  product_mux_9 <= coeffphase1_19 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                        coeffphase2_19;
  temp_process17 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_17_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_17_under_pipe_im <= (OTHERS => '0');
      product_mux_9_pipe <= (OTHERS => '0');
      product_9_re_pipe_re <= (OTHERS => '0');
      product_9_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_17_under_pipe_re <= delay_pipeline_re(17);
        delay_pipeline_re_17_under_pipe_im <= delay_pipeline_im(17);
        product_mux_9_pipe <= product_mux_9;

        product_9_re_pipe_re <= delay_pipeline_re_17_under_pipe_re * product_mux_9_pipe;
        product_9_re_pipe_im <= delay_pipeline_re_17_under_pipe_im * product_mux_9_pipe;

      END IF;
    END IF;
  END PROCESS temp_process17;

  product_9_re <= product_9_re_pipe_re;
  product_9_im <= product_9_re_pipe_im;

  product_mux_10 <= coeffphase1_18 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_18;
  temp_process18 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_16_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_16_under_pipe_im <= (OTHERS => '0');
      product_mux_10_pipe <= (OTHERS => '0');
      product_10_re_pipe_re <= (OTHERS => '0');
      product_10_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_16_under_pipe_re <= delay_pipeline_re(16);
        delay_pipeline_re_16_under_pipe_im <= delay_pipeline_im(16);
        product_mux_10_pipe <= product_mux_10;

        product_10_re_pipe_re <= delay_pipeline_re_16_under_pipe_re * product_mux_10_pipe;
        product_10_re_pipe_im <= delay_pipeline_re_16_under_pipe_im * product_mux_10_pipe;

      END IF;
    END IF;
  END PROCESS temp_process18;

  product_10_re <= product_10_re_pipe_re;
  product_10_im <= product_10_re_pipe_im;

  product_mux_11 <= coeffphase1_17 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_17;
  temp_process19 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_15_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_15_under_pipe_im <= (OTHERS => '0');
      product_mux_11_pipe <= (OTHERS => '0');
      product_11_re_pipe_re <= (OTHERS => '0');
      product_11_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_15_under_pipe_re <= delay_pipeline_re(15);
        delay_pipeline_re_15_under_pipe_im <= delay_pipeline_im(15);
        product_mux_11_pipe <= product_mux_11;

        product_11_re_pipe_re <= delay_pipeline_re_15_under_pipe_re * product_mux_11_pipe;
        product_11_re_pipe_im <= delay_pipeline_re_15_under_pipe_im * product_mux_11_pipe;

      END IF;
    END IF;
  END PROCESS temp_process19;

  product_11_re <= product_11_re_pipe_re;
  product_11_im <= product_11_re_pipe_im;

  product_mux_12 <= coeffphase1_16 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_16;
  temp_process20 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_14_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_14_under_pipe_im <= (OTHERS => '0');
      product_mux_12_pipe <= (OTHERS => '0');
      product_12_re_pipe_re <= (OTHERS => '0');
      product_12_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_14_under_pipe_re <= delay_pipeline_re(14);
        delay_pipeline_re_14_under_pipe_im <= delay_pipeline_im(14);
        product_mux_12_pipe <= product_mux_12;

        product_12_re_pipe_re <= delay_pipeline_re_14_under_pipe_re * product_mux_12_pipe;
        product_12_re_pipe_im <= delay_pipeline_re_14_under_pipe_im * product_mux_12_pipe;

      END IF;
    END IF;
  END PROCESS temp_process20;

  product_12_re <= product_12_re_pipe_re;
  product_12_im <= product_12_re_pipe_im;

  product_mux_13 <= coeffphase1_15 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_15;
  temp_process21 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_13_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_13_under_pipe_im <= (OTHERS => '0');
      product_mux_13_pipe <= (OTHERS => '0');
      product_13_re_pipe_re <= (OTHERS => '0');
      product_13_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_13_under_pipe_re <= delay_pipeline_re(13);
        delay_pipeline_re_13_under_pipe_im <= delay_pipeline_im(13);
        product_mux_13_pipe <= product_mux_13;

        product_13_re_pipe_re <= delay_pipeline_re_13_under_pipe_re * product_mux_13_pipe;
        product_13_re_pipe_im <= delay_pipeline_re_13_under_pipe_im * product_mux_13_pipe;

      END IF;
    END IF;
  END PROCESS temp_process21;

  product_13_re <= product_13_re_pipe_re;
  product_13_im <= product_13_re_pipe_im;

  product_mux_14 <= coeffphase1_14 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_14;
  temp_process22 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_12_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_12_under_pipe_im <= (OTHERS => '0');
      product_mux_14_pipe <= (OTHERS => '0');
      product_14_re_pipe_re <= (OTHERS => '0');
      product_14_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_12_under_pipe_re <= delay_pipeline_re(12);
        delay_pipeline_re_12_under_pipe_im <= delay_pipeline_im(12);
        product_mux_14_pipe <= product_mux_14;

        product_14_re_pipe_re <= delay_pipeline_re_12_under_pipe_re * product_mux_14_pipe;
        product_14_re_pipe_im <= delay_pipeline_re_12_under_pipe_im * product_mux_14_pipe;

      END IF;
    END IF;
  END PROCESS temp_process22;

  product_14_re <= product_14_re_pipe_re;
  product_14_im <= product_14_re_pipe_im;

  product_mux_15 <= coeffphase1_13 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_13;
  temp_process23 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_11_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_11_under_pipe_im <= (OTHERS => '0');
      product_mux_15_pipe <= (OTHERS => '0');
      product_15_re_pipe_re <= (OTHERS => '0');
      product_15_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_11_under_pipe_re <= delay_pipeline_re(11);
        delay_pipeline_re_11_under_pipe_im <= delay_pipeline_im(11);
        product_mux_15_pipe <= product_mux_15;

        product_15_re_pipe_re <= delay_pipeline_re_11_under_pipe_re * product_mux_15_pipe;
        product_15_re_pipe_im <= delay_pipeline_re_11_under_pipe_im * product_mux_15_pipe;

      END IF;
    END IF;
  END PROCESS temp_process23;

  product_15_re <= product_15_re_pipe_re;
  product_15_im <= product_15_re_pipe_im;

  product_mux_16 <= coeffphase1_12 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_12;
  temp_process24 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_10_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_10_under_pipe_im <= (OTHERS => '0');
      product_mux_16_pipe <= (OTHERS => '0');
      product_16_re_pipe_re <= (OTHERS => '0');
      product_16_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_10_under_pipe_re <= delay_pipeline_re(10);
        delay_pipeline_re_10_under_pipe_im <= delay_pipeline_im(10);
        product_mux_16_pipe <= product_mux_16;

        product_16_re_pipe_re <= delay_pipeline_re_10_under_pipe_re * product_mux_16_pipe;
        product_16_re_pipe_im <= delay_pipeline_re_10_under_pipe_im * product_mux_16_pipe;

      END IF;
    END IF;
  END PROCESS temp_process24;

  product_16_re <= product_16_re_pipe_re;
  product_16_im <= product_16_re_pipe_im;

  product_mux_17 <= coeffphase1_11 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_11;
  temp_process25 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_9_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_9_under_pipe_im <= (OTHERS => '0');
      product_mux_17_pipe <= (OTHERS => '0');
      product_17_re_pipe_re <= (OTHERS => '0');
      product_17_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_9_under_pipe_re <= delay_pipeline_re(9);
        delay_pipeline_re_9_under_pipe_im <= delay_pipeline_im(9);
        product_mux_17_pipe <= product_mux_17;

        product_17_re_pipe_re <= delay_pipeline_re_9_under_pipe_re * product_mux_17_pipe;
        product_17_re_pipe_im <= delay_pipeline_re_9_under_pipe_im * product_mux_17_pipe;

      END IF;
    END IF;
  END PROCESS temp_process25;

  product_17_re <= product_17_re_pipe_re;
  product_17_im <= product_17_re_pipe_im;

  product_mux_18 <= coeffphase1_10 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_10;
  temp_process26 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_8_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_8_under_pipe_im <= (OTHERS => '0');
      product_mux_18_pipe <= (OTHERS => '0');
      product_18_re_pipe_re <= (OTHERS => '0');
      product_18_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_8_under_pipe_re <= delay_pipeline_re(8);
        delay_pipeline_re_8_under_pipe_im <= delay_pipeline_im(8);
        product_mux_18_pipe <= product_mux_18;

        product_18_re_pipe_re <= delay_pipeline_re_8_under_pipe_re * product_mux_18_pipe;
        product_18_re_pipe_im <= delay_pipeline_re_8_under_pipe_im * product_mux_18_pipe;

      END IF;
    END IF;
  END PROCESS temp_process26;

  product_18_re <= product_18_re_pipe_re;
  product_18_im <= product_18_re_pipe_im;

  product_mux_19 <= coeffphase1_9 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_9;
  temp_process27 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_7_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_7_under_pipe_im <= (OTHERS => '0');
      product_mux_19_pipe <= (OTHERS => '0');
      product_19_re_pipe_re <= (OTHERS => '0');
      product_19_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_7_under_pipe_re <= delay_pipeline_re(7);
        delay_pipeline_re_7_under_pipe_im <= delay_pipeline_im(7);
        product_mux_19_pipe <= product_mux_19;

        product_19_re_pipe_re <= delay_pipeline_re_7_under_pipe_re * product_mux_19_pipe;
        product_19_re_pipe_im <= delay_pipeline_re_7_under_pipe_im * product_mux_19_pipe;

      END IF;
    END IF;
  END PROCESS temp_process27;

  product_19_re <= product_19_re_pipe_re;
  product_19_im <= product_19_re_pipe_im;

  product_mux_20 <= coeffphase1_8 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_8;
  temp_process28 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_6_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_6_under_pipe_im <= (OTHERS => '0');
      product_mux_20_pipe <= (OTHERS => '0');
      product_20_re_pipe_re <= (OTHERS => '0');
      product_20_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_6_under_pipe_re <= delay_pipeline_re(6);
        delay_pipeline_re_6_under_pipe_im <= delay_pipeline_im(6);
        product_mux_20_pipe <= product_mux_20;

        product_20_re_pipe_re <= delay_pipeline_re_6_under_pipe_re * product_mux_20_pipe;
        product_20_re_pipe_im <= delay_pipeline_re_6_under_pipe_im * product_mux_20_pipe;

      END IF;
    END IF;
  END PROCESS temp_process28;

  product_20_re <= product_20_re_pipe_re;
  product_20_im <= product_20_re_pipe_im;

  product_mux_21 <= coeffphase1_7 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_7;
  temp_process29 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_5_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_5_under_pipe_im <= (OTHERS => '0');
      product_mux_21_pipe <= (OTHERS => '0');
      product_21_re_pipe_re <= (OTHERS => '0');
      product_21_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_5_under_pipe_re <= delay_pipeline_re(5);
        delay_pipeline_re_5_under_pipe_im <= delay_pipeline_im(5);
        product_mux_21_pipe <= product_mux_21;

        product_21_re_pipe_re <= delay_pipeline_re_5_under_pipe_re * product_mux_21_pipe;
        product_21_re_pipe_im <= delay_pipeline_re_5_under_pipe_im * product_mux_21_pipe;

      END IF;
    END IF;
  END PROCESS temp_process29;

  product_21_re <= product_21_re_pipe_re;
  product_21_im <= product_21_re_pipe_im;

  product_mux_22 <= coeffphase1_6 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_6;
  temp_process30 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_4_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_4_under_pipe_im <= (OTHERS => '0');
      product_mux_22_pipe <= (OTHERS => '0');
      product_22_re_pipe_re <= (OTHERS => '0');
      product_22_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_4_under_pipe_re <= delay_pipeline_re(4);
        delay_pipeline_re_4_under_pipe_im <= delay_pipeline_im(4);
        product_mux_22_pipe <= product_mux_22;

        product_22_re_pipe_re <= delay_pipeline_re_4_under_pipe_re * product_mux_22_pipe;
        product_22_re_pipe_im <= delay_pipeline_re_4_under_pipe_im * product_mux_22_pipe;

      END IF;
    END IF;
  END PROCESS temp_process30;

  product_22_re <= product_22_re_pipe_re;
  product_22_im <= product_22_re_pipe_im;

  product_mux_23 <= coeffphase1_5 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_5;
  temp_process31 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_3_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_3_under_pipe_im <= (OTHERS => '0');
      product_mux_23_pipe <= (OTHERS => '0');
      product_23_re_pipe_re <= (OTHERS => '0');
      product_23_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_3_under_pipe_re <= delay_pipeline_re(3);
        delay_pipeline_re_3_under_pipe_im <= delay_pipeline_im(3);
        product_mux_23_pipe <= product_mux_23;

        product_23_re_pipe_re <= delay_pipeline_re_3_under_pipe_re * product_mux_23_pipe;
        product_23_re_pipe_im <= delay_pipeline_re_3_under_pipe_im * product_mux_23_pipe;

      END IF;
    END IF;
  END PROCESS temp_process31;

  product_23_re <= product_23_re_pipe_re;
  product_23_im <= product_23_re_pipe_im;

  product_mux_24 <= coeffphase1_4 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_4;
  temp_process32 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_2_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_2_under_pipe_im <= (OTHERS => '0');
      product_mux_24_pipe <= (OTHERS => '0');
      product_24_re_pipe_re <= (OTHERS => '0');
      product_24_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_2_under_pipe_re <= delay_pipeline_re(2);
        delay_pipeline_re_2_under_pipe_im <= delay_pipeline_im(2);
        product_mux_24_pipe <= product_mux_24;

        product_24_re_pipe_re <= delay_pipeline_re_2_under_pipe_re * product_mux_24_pipe;
        product_24_re_pipe_im <= delay_pipeline_re_2_under_pipe_im * product_mux_24_pipe;

      END IF;
    END IF;
  END PROCESS temp_process32;

  product_24_re <= product_24_re_pipe_re;
  product_24_im <= product_24_re_pipe_im;

  product_mux_25 <= coeffphase1_3 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_3;
  temp_process33 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_1_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_1_under_pipe_im <= (OTHERS => '0');
      product_mux_25_pipe <= (OTHERS => '0');
      product_25_re_pipe_re <= (OTHERS => '0');
      product_25_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_1_under_pipe_re <= delay_pipeline_re(1);
        delay_pipeline_re_1_under_pipe_im <= delay_pipeline_im(1);
        product_mux_25_pipe <= product_mux_25;

        product_25_re_pipe_re <= delay_pipeline_re_1_under_pipe_re * product_mux_25_pipe;
        product_25_re_pipe_im <= delay_pipeline_re_1_under_pipe_im * product_mux_25_pipe;

      END IF;
    END IF;
  END PROCESS temp_process33;

  product_25_re <= product_25_re_pipe_re;
  product_25_im <= product_25_re_pipe_im;

  product_mux_26 <= coeffphase1_2 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_2;
  temp_process34 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_re_0_under_pipe_re <= (OTHERS => '0');
      delay_pipeline_re_0_under_pipe_im <= (OTHERS => '0');
      product_mux_26_pipe <= (OTHERS => '0');
      product_26_re_pipe_re <= (OTHERS => '0');
      product_26_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        delay_pipeline_re_0_under_pipe_re <= delay_pipeline_re(0);
        delay_pipeline_re_0_under_pipe_im <= delay_pipeline_im(0);
        product_mux_26_pipe <= product_mux_26;

        product_26_re_pipe_re <= delay_pipeline_re_0_under_pipe_re * product_mux_26_pipe;
        product_26_re_pipe_im <= delay_pipeline_re_0_under_pipe_im * product_mux_26_pipe;

      END IF;
    END IF;
  END PROCESS temp_process34;

  product_26_re <= product_26_re_pipe_re;
  product_26_im <= product_26_re_pipe_im;

  product_mux_27 <= coeffphase1_1 WHEN ( cur_count = to_unsigned(0, 2) ) ELSE
                         coeffphase2_1;
  temp_process35 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      DUC_src_FIR_Interpolation_in_regtype_re_pipe_re <= (OTHERS => '0');
      DUC_src_FIR_Interpolation_in_regtype_re_pipe_im <= (OTHERS => '0');
      product_mux_27_pipe <= (OTHERS => '0');
      product_27_re_pipe_re <= (OTHERS => '0');
      product_27_re_pipe_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        DUC_src_FIR_Interpolation_in_regtype_re_pipe_re <= DUC_src_FIR_Interpolation_in_regtype_re;
        DUC_src_FIR_Interpolation_in_regtype_re_pipe_im <= DUC_src_FIR_Interpolation_in_regtype_im;
        product_mux_27_pipe <= product_mux_27;

        product_27_re_pipe_re <= DUC_src_FIR_Interpolation_in_regtype_re_pipe_re * product_mux_27_pipe;
        product_27_re_pipe_im <= DUC_src_FIR_Interpolation_in_regtype_re_pipe_im * product_mux_27_pipe;

      END IF;
    END IF;
  END PROCESS temp_process35;

  product_27_re <= product_27_re_pipe_re;
  product_27_im <= product_27_re_pipe_im;

  add_cast <= resize(product_27_re, 37);
  add_cast_1 <= resize(product_26_re, 37);
  add_temp <= resize(add_cast, 38) + resize(add_cast_1, 38);
  sum1_re <= add_temp(36 DOWNTO 0);

  add_cast_2 <= resize(product_27_im, 37);
  add_cast_3 <= resize(product_26_im, 37);
  add_temp_1 <= resize(add_cast_2, 38) + resize(add_cast_3, 38);
  sum1_im <= add_temp_1(36 DOWNTO 0);

  add_cast_4 <= sum1_re;
  add_cast_5 <= resize(product_25_re, 37);
  add_temp_2 <= resize(add_cast_4, 38) + resize(add_cast_5, 38);
  sum2_re <= add_temp_2(36 DOWNTO 0);

  add_cast_6 <= sum1_im;
  add_cast_7 <= resize(product_25_im, 37);
  add_temp_3 <= resize(add_cast_6, 38) + resize(add_cast_7, 38);
  sum2_im <= add_temp_3(36 DOWNTO 0);

  add_cast_8 <= sum2_re;
  add_cast_9 <= resize(product_24_re, 37);
  add_temp_4 <= resize(add_cast_8, 38) + resize(add_cast_9, 38);
  sum3_re <= add_temp_4(36 DOWNTO 0);

  add_cast_10 <= sum2_im;
  add_cast_11 <= resize(product_24_im, 37);
  add_temp_5 <= resize(add_cast_10, 38) + resize(add_cast_11, 38);
  sum3_im <= add_temp_5(36 DOWNTO 0);

  add_cast_12 <= sum3_re;
  add_cast_13 <= resize(product_23_re, 37);
  add_temp_6 <= resize(add_cast_12, 38) + resize(add_cast_13, 38);
  sum4_re <= add_temp_6(36 DOWNTO 0);

  add_cast_14 <= sum3_im;
  add_cast_15 <= resize(product_23_im, 37);
  add_temp_7 <= resize(add_cast_14, 38) + resize(add_cast_15, 38);
  sum4_im <= add_temp_7(36 DOWNTO 0);

  add_cast_16 <= sum4_re;
  add_cast_17 <= resize(product_22_re, 37);
  add_temp_8 <= resize(add_cast_16, 38) + resize(add_cast_17, 38);
  sum5_re <= add_temp_8(36 DOWNTO 0);

  add_cast_18 <= sum4_im;
  add_cast_19 <= resize(product_22_im, 37);
  add_temp_9 <= resize(add_cast_18, 38) + resize(add_cast_19, 38);
  sum5_im <= add_temp_9(36 DOWNTO 0);

  add_cast_20 <= sum5_re;
  add_cast_21 <= resize(product_21_re, 37);
  add_temp_10 <= resize(add_cast_20, 38) + resize(add_cast_21, 38);
  sum6_re <= add_temp_10(36 DOWNTO 0);

  add_cast_22 <= sum5_im;
  add_cast_23 <= resize(product_21_im, 37);
  add_temp_11 <= resize(add_cast_22, 38) + resize(add_cast_23, 38);
  sum6_im <= add_temp_11(36 DOWNTO 0);

  add_cast_24 <= sum6_re;
  add_cast_25 <= resize(product_20_re, 37);
  add_temp_12 <= resize(add_cast_24, 38) + resize(add_cast_25, 38);
  sum7_re <= add_temp_12(36 DOWNTO 0);

  add_cast_26 <= sum6_im;
  add_cast_27 <= resize(product_20_im, 37);
  add_temp_13 <= resize(add_cast_26, 38) + resize(add_cast_27, 38);
  sum7_im <= add_temp_13(36 DOWNTO 0);

  add_cast_28 <= sum7_re;
  add_cast_29 <= resize(product_19_re, 37);
  add_temp_14 <= resize(add_cast_28, 38) + resize(add_cast_29, 38);
  sum8_re <= add_temp_14(36 DOWNTO 0);

  add_cast_30 <= sum7_im;
  add_cast_31 <= resize(product_19_im, 37);
  add_temp_15 <= resize(add_cast_30, 38) + resize(add_cast_31, 38);
  sum8_im <= add_temp_15(36 DOWNTO 0);

  add_cast_32 <= sum8_re;
  add_cast_33 <= resize(product_18_re, 37);
  add_temp_16 <= resize(add_cast_32, 38) + resize(add_cast_33, 38);
  sum9_re <= add_temp_16(36 DOWNTO 0);

  add_cast_34 <= sum8_im;
  add_cast_35 <= resize(product_18_im, 37);
  add_temp_17 <= resize(add_cast_34, 38) + resize(add_cast_35, 38);
  sum9_im <= add_temp_17(36 DOWNTO 0);

  add_cast_36 <= sum9_re;
  add_cast_37 <= resize(product_17_re, 37);
  add_temp_18 <= resize(add_cast_36, 38) + resize(add_cast_37, 38);
  sum10_re <= add_temp_18(36 DOWNTO 0);

  add_cast_38 <= sum9_im;
  add_cast_39 <= resize(product_17_im, 37);
  add_temp_19 <= resize(add_cast_38, 38) + resize(add_cast_39, 38);
  sum10_im <= add_temp_19(36 DOWNTO 0);

  add_cast_40 <= sum10_re;
  add_cast_41 <= resize(product_16_re, 37);
  add_temp_20 <= resize(add_cast_40, 38) + resize(add_cast_41, 38);
  sum11_re <= add_temp_20(36 DOWNTO 0);

  add_cast_42 <= sum10_im;
  add_cast_43 <= resize(product_16_im, 37);
  add_temp_21 <= resize(add_cast_42, 38) + resize(add_cast_43, 38);
  sum11_im <= add_temp_21(36 DOWNTO 0);

  add_cast_44 <= sum11_re;
  add_cast_45 <= resize(product_15_re, 37);
  add_temp_22 <= resize(add_cast_44, 38) + resize(add_cast_45, 38);
  sum12_re <= add_temp_22(36 DOWNTO 0);

  add_cast_46 <= sum11_im;
  add_cast_47 <= resize(product_15_im, 37);
  add_temp_23 <= resize(add_cast_46, 38) + resize(add_cast_47, 38);
  sum12_im <= add_temp_23(36 DOWNTO 0);

  add_cast_48 <= sum12_re;
  add_cast_49 <= resize(product_14_re, 37);
  add_temp_24 <= resize(add_cast_48, 38) + resize(add_cast_49, 38);
  sum13_re <= add_temp_24(36 DOWNTO 0);

  add_cast_50 <= sum12_im;
  add_cast_51 <= resize(product_14_im, 37);
  add_temp_25 <= resize(add_cast_50, 38) + resize(add_cast_51, 38);
  sum13_im <= add_temp_25(36 DOWNTO 0);

  add_cast_52 <= sum13_re;
  add_cast_53 <= resize(product_13_re, 37);
  add_temp_26 <= resize(add_cast_52, 38) + resize(add_cast_53, 38);
  sum14_re <= add_temp_26(36 DOWNTO 0);

  add_cast_54 <= sum13_im;
  add_cast_55 <= resize(product_13_im, 37);
  add_temp_27 <= resize(add_cast_54, 38) + resize(add_cast_55, 38);
  sum14_im <= add_temp_27(36 DOWNTO 0);

  add_cast_56 <= sum14_re;
  add_cast_57 <= resize(product_12_re, 37);
  add_temp_28 <= resize(add_cast_56, 38) + resize(add_cast_57, 38);
  sum15_re <= add_temp_28(36 DOWNTO 0);

  add_cast_58 <= sum14_im;
  add_cast_59 <= resize(product_12_im, 37);
  add_temp_29 <= resize(add_cast_58, 38) + resize(add_cast_59, 38);
  sum15_im <= add_temp_29(36 DOWNTO 0);

  add_cast_60 <= sum15_re;
  add_cast_61 <= resize(product_11_re, 37);
  add_temp_30 <= resize(add_cast_60, 38) + resize(add_cast_61, 38);
  sum16_re <= add_temp_30(36 DOWNTO 0);

  add_cast_62 <= sum15_im;
  add_cast_63 <= resize(product_11_im, 37);
  add_temp_31 <= resize(add_cast_62, 38) + resize(add_cast_63, 38);
  sum16_im <= add_temp_31(36 DOWNTO 0);

  add_cast_64 <= sum16_re;
  add_cast_65 <= resize(product_10_re, 37);
  add_temp_32 <= resize(add_cast_64, 38) + resize(add_cast_65, 38);
  sum17_re <= add_temp_32(36 DOWNTO 0);

  add_cast_66 <= sum16_im;
  add_cast_67 <= resize(product_10_im, 37);
  add_temp_33 <= resize(add_cast_66, 38) + resize(add_cast_67, 38);
  sum17_im <= add_temp_33(36 DOWNTO 0);

  add_cast_68 <= sum17_re;
  add_cast_69 <= resize(product_9_re, 37);
  add_temp_34 <= resize(add_cast_68, 38) + resize(add_cast_69, 38);
  sum18_re <= add_temp_34(36 DOWNTO 0);

  add_cast_70 <= sum17_im;
  add_cast_71 <= resize(product_9_im, 37);
  add_temp_35 <= resize(add_cast_70, 38) + resize(add_cast_71, 38);
  sum18_im <= add_temp_35(36 DOWNTO 0);

  add_cast_72 <= sum18_re;
  add_cast_73 <= resize(product_8_re, 37);
  add_temp_36 <= resize(add_cast_72, 38) + resize(add_cast_73, 38);
  sum19_re <= add_temp_36(36 DOWNTO 0);

  add_cast_74 <= sum18_im;
  add_cast_75 <= resize(product_8_im, 37);
  add_temp_37 <= resize(add_cast_74, 38) + resize(add_cast_75, 38);
  sum19_im <= add_temp_37(36 DOWNTO 0);

  add_cast_76 <= sum19_re;
  add_cast_77 <= resize(product_7_re, 37);
  add_temp_38 <= resize(add_cast_76, 38) + resize(add_cast_77, 38);
  sum20_re <= add_temp_38(36 DOWNTO 0);

  add_cast_78 <= sum19_im;
  add_cast_79 <= resize(product_7_im, 37);
  add_temp_39 <= resize(add_cast_78, 38) + resize(add_cast_79, 38);
  sum20_im <= add_temp_39(36 DOWNTO 0);

  add_cast_80 <= sum20_re;
  add_cast_81 <= resize(product_6_re, 37);
  add_temp_40 <= resize(add_cast_80, 38) + resize(add_cast_81, 38);
  sum21_re <= add_temp_40(36 DOWNTO 0);

  add_cast_82 <= sum20_im;
  add_cast_83 <= resize(product_6_im, 37);
  add_temp_41 <= resize(add_cast_82, 38) + resize(add_cast_83, 38);
  sum21_im <= add_temp_41(36 DOWNTO 0);

  add_cast_84 <= sum21_re;
  add_cast_85 <= resize(product_5_re, 37);
  add_temp_42 <= resize(add_cast_84, 38) + resize(add_cast_85, 38);
  sum22_re <= add_temp_42(36 DOWNTO 0);

  add_cast_86 <= sum21_im;
  add_cast_87 <= resize(product_5_im, 37);
  add_temp_43 <= resize(add_cast_86, 38) + resize(add_cast_87, 38);
  sum22_im <= add_temp_43(36 DOWNTO 0);

  add_cast_88 <= sum22_re;
  add_cast_89 <= resize(product_4_re, 37);
  add_temp_44 <= resize(add_cast_88, 38) + resize(add_cast_89, 38);
  sum23_re <= add_temp_44(36 DOWNTO 0);

  add_cast_90 <= sum22_im;
  add_cast_91 <= resize(product_4_im, 37);
  add_temp_45 <= resize(add_cast_90, 38) + resize(add_cast_91, 38);
  sum23_im <= add_temp_45(36 DOWNTO 0);

  add_cast_92 <= sum23_re;
  add_cast_93 <= resize(product_3_re, 37);
  add_temp_46 <= resize(add_cast_92, 38) + resize(add_cast_93, 38);
  sum24_re <= add_temp_46(36 DOWNTO 0);

  add_cast_94 <= sum23_im;
  add_cast_95 <= resize(product_3_im, 37);
  add_temp_47 <= resize(add_cast_94, 38) + resize(add_cast_95, 38);
  sum24_im <= add_temp_47(36 DOWNTO 0);

  add_cast_96 <= sum24_re;
  add_cast_97 <= resize(product_2_re, 37);
  add_temp_48 <= resize(add_cast_96, 38) + resize(add_cast_97, 38);
  sum25_re <= add_temp_48(36 DOWNTO 0);

  add_cast_98 <= sum24_im;
  add_cast_99 <= resize(product_2_im, 37);
  add_temp_49 <= resize(add_cast_98, 38) + resize(add_cast_99, 38);
  sum25_im <= add_temp_49(36 DOWNTO 0);

  add_cast_100 <= sum25_re;
  add_cast_101 <= resize(product_1_re, 37);
  add_temp_50 <= resize(add_cast_100, 38) + resize(add_cast_101, 38);
  sum26_re <= add_temp_50(36 DOWNTO 0);

  add_cast_102 <= sum25_im;
  add_cast_103 <= resize(product_1_im, 37);
  add_temp_51 <= resize(add_cast_102, 38) + resize(add_cast_103, 38);
  sum26_im <= add_temp_51(36 DOWNTO 0);

  add_cast_104 <= sum26_re;
  add_cast_105 <= resize(product_re, 37);
  add_temp_52 <= resize(add_cast_104, 38) + resize(add_cast_105, 38);
  sum27_re <= add_temp_52(36 DOWNTO 0);

  add_cast_106 <= sum26_im;
  add_cast_107 <= resize(product_im, 37);
  add_temp_53 <= resize(add_cast_106, 38) + resize(add_cast_107, 38);
  sum27_im <= add_temp_53(36 DOWNTO 0);

  output_typeconvert_re <= sum27_re(32 DOWNTO 15);
  output_typeconvert_im <= sum27_im(32 DOWNTO 15);

  DataHoldRegister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      regout_re <= (OTHERS => '0');
      regout_im <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF enb_1_16_1 = '1' THEN
        regout_re <= output_typeconvert_re;
        regout_im <= output_typeconvert_im;
      END IF;
    END IF; 
  END PROCESS DataHoldRegister_process;

  muxout_re <= output_typeconvert_re WHEN ( enb_1_16_1 = '1' ) ELSE
               regout_re;
  muxout_im <= output_typeconvert_im WHEN ( enb_1_16_1 = '1' ) ELSE
               regout_im;
  -- Assignment Statements
  DUC_src_FIR_Interpolation_out_re <= std_logic_vector(muxout_re);
  DUC_src_FIR_Interpolation_out_im <= std_logic_vector(muxout_im);
END rtl;
