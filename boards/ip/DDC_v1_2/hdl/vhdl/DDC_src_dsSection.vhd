-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/ddcduc/DDC_src_dsSection.vhd
-- Created: 2023-01-04 14:03:17
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DDC_src_dsSection
-- Source Path: ddcduc/DDC/CICDecimation/dsSection
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DDC_src_dsSection IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        integOut_re                       :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
        integOut_im                       :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
        validInreg                        :   IN    std_logic;
        downsampleVal                     :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        internalReset                     :   IN    std_logic;
        dsOut_re                          :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
        dsOut_im                          :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
        ds_vout                           :   OUT   std_logic
        );
END DDC_src_dsSection;


ARCHITECTURE rtl OF DDC_src_dsSection IS

  -- Signals
  SIGNAL integOut_re_signed               : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL integOut_im_signed               : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL decimate_count                   : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL dsOut_re_tmp                     : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL dsOut_im_tmp                     : signed(23 DOWNTO 0);  -- sfix24_En13

BEGIN
  integOut_re_signed <= signed(integOut_re);

  integOut_im_signed <= signed(integOut_im);

  decimate_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      decimate_count <= to_unsigned(16#0#, 4);
      dsOut_re_tmp <= to_signed(16#000000#, 24);
      dsOut_im_tmp <= to_signed(16#000000#, 24);
      ds_vout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          decimate_count <= to_unsigned(16#0#, 4);
          dsOut_re_tmp <= to_signed(16#000000#, 24);
          dsOut_im_tmp <= to_signed(16#000000#, 24);
          ds_vout <= '0';
        ELSE 
          IF (validInreg /= '0') AND (decimate_count = to_unsigned(16#0#, 4)) THEN 
            dsOut_re_tmp <= integOut_re_signed;
          END IF;
          IF (validInreg /= '0') AND (decimate_count = to_unsigned(16#0#, 4)) THEN 
            dsOut_im_tmp <= integOut_im_signed;
          END IF;
          IF (validInreg /= '0') AND (decimate_count = to_unsigned(16#0#, 4)) THEN 
            ds_vout <= '1';
          ELSE 
            ds_vout <= '0';
          END IF;
          IF validInreg /= '0' THEN 
            IF resize(decimate_count, 12) < to_unsigned(16#003#, 12) THEN 
              decimate_count <= decimate_count + to_unsigned(16#1#, 4);
            ELSE 
              decimate_count <= to_unsigned(16#0#, 4);
            END IF;
          END IF;
        END IF;
      END IF;
    END IF;
  END PROCESS decimate_process;


  dsOut_re <= std_logic_vector(dsOut_re_tmp);

  dsOut_im <= std_logic_vector(dsOut_im_tmp);

END rtl;

