-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/ddcduc/DDC_src_CICDecimation.vhd
-- Created: 2023-01-04 14:03:17
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DDC_src_CICDecimation
-- Source Path: ddcduc/DDC/CICDecimation
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DDC_src_CICDecimation IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En17
        dataOut_im                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En17
        validOut                          :   OUT   std_logic
        );
END DDC_src_CICDecimation;


ARCHITECTURE rtl OF DDC_src_CICDecimation IS

  -- Component Declarations
  COMPONENT DDC_src_iSection
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataInreg_re                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataInreg_im                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validInreg                      :   IN    std_logic;
          internalReset                   :   IN    std_logic;
          integOut_re                     :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          integOut_im                     :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En13
          );
  END COMPONENT;

  COMPONENT DDC_src_dsSection
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          integOut_re                     :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          integOut_im                     :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          validInreg                      :   IN    std_logic;
          downsampleVal                   :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          internalReset                   :   IN    std_logic;
          dsOut_re                        :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          dsOut_im                        :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          ds_vout                         :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT DDC_src_cSection
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dsOut_re                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          dsOut_im                        :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          ds_vout                         :   IN    std_logic;
          internalReset                   :   IN    std_logic;
          combOut_re                      :   OUT   std_logic_vector(20 DOWNTO 0);  -- sfix21_En10
          combOut_im                      :   OUT   std_logic_vector(20 DOWNTO 0);  -- sfix21_En10
          c_vout                          :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT DDC_src_gcSection
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          combOut_re                      :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21_En10
          combOut_im                      :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21_En10
          downsampleValInd                :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          internalReset                   :   IN    std_logic;
          gcOut_re                        :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En17
          gcOut_im                        :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En17
          );
  END COMPONENT;

  COMPONENT DDC_src_castSection
    PORT( gcOut_re                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En17
          gcOut_im                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En17
          dataOut_re                      :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En17
          dataOut_im                      :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En17
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : DDC_src_iSection
    USE ENTITY work.DDC_src_iSection(rtl);

  FOR ALL : DDC_src_dsSection
    USE ENTITY work.DDC_src_dsSection(rtl);

  FOR ALL : DDC_src_cSection
    USE ENTITY work.DDC_src_cSection(rtl);

  FOR ALL : DDC_src_gcSection
    USE ENTITY work.DDC_src_gcSection(rtl);

  FOR ALL : DDC_src_castSection
    USE ENTITY work.DDC_src_castSection(rtl);

  -- Signals
  SIGNAL softReset                        : std_logic;
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL dataInreg_re                     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL dataInreg_im                     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL validInreg                       : std_logic;
  SIGNAL integOut_re                      : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL integOut_im                      : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL downsampleVal                    : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL dsOut_re                         : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL dsOut_im                         : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL ds_vout                          : std_logic;
  SIGNAL combOut_re                       : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL combOut_im                       : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL c_vout                           : std_logic;
  SIGNAL intdelay_reg                     : std_logic_vector(0 TO 8);  -- ufix1 [9]
  SIGNAL validOut_1                       : std_logic;
  SIGNAL invalidOut_re                    : signed(17 DOWNTO 0);  -- sfix18_En17
  SIGNAL invalidOut_im                    : signed(17 DOWNTO 0);  -- sfix18_En17
  SIGNAL gcOut_re                         : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL gcOut_im                         : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL dataOut_re_1                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL dataOut_im_1                     : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL dataOut_re_signed                : signed(17 DOWNTO 0);  -- sfix18_En17
  SIGNAL dataOut_im_signed                : signed(17 DOWNTO 0);  -- sfix18_En17
  SIGNAL dataOut_re_tmp                   : signed(17 DOWNTO 0);  -- sfix18_En17
  SIGNAL dataOut_im_tmp                   : signed(17 DOWNTO 0);  -- sfix18_En17

BEGIN
  u_iSection : DDC_src_iSection
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataInreg_re => std_logic_vector(dataInreg_re),  -- sfix16_En15
              dataInreg_im => std_logic_vector(dataInreg_im),  -- sfix16_En15
              validInreg => validInreg,
              internalReset => softReset,
              integOut_re => integOut_re,  -- sfix24_En13
              integOut_im => integOut_im  -- sfix24_En13
              );

  u_dsSection : DDC_src_dsSection
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              integOut_re => integOut_re,  -- sfix24_En13
              integOut_im => integOut_im,  -- sfix24_En13
              validInreg => validInreg,
              downsampleVal => std_logic_vector(downsampleVal),  -- ufix12
              internalReset => softReset,
              dsOut_re => dsOut_re,  -- sfix24_En13
              dsOut_im => dsOut_im,  -- sfix24_En13
              ds_vout => ds_vout
              );

  u_cSection : DDC_src_cSection
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dsOut_re => dsOut_re,  -- sfix24_En13
              dsOut_im => dsOut_im,  -- sfix24_En13
              ds_vout => ds_vout,
              internalReset => softReset,
              combOut_re => combOut_re,  -- sfix21_En10
              combOut_im => combOut_im,  -- sfix21_En10
              c_vout => c_vout
              );

  u_gcSection : DDC_src_gcSection
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              combOut_re => combOut_re,  -- sfix21_En10
              combOut_im => combOut_im,  -- sfix21_En10
              downsampleValInd => std_logic_vector(downsampleVal),  -- ufix12
              internalReset => softReset,
              gcOut_re => gcOut_re,  -- sfix18_En17
              gcOut_im => gcOut_im  -- sfix18_En17
              );

  u_castSection : DDC_src_castSection
    PORT MAP( gcOut_re => gcOut_re,  -- sfix18_En17
              gcOut_im => gcOut_im,  -- sfix18_En17
              dataOut_re => dataOut_re_1,  -- sfix18_En17
              dataOut_im => dataOut_im_1  -- sfix18_En17
              );

  softReset <= '0';

  dataIn_re_signed <= signed(dataIn_re);

  dataIn_im_signed <= signed(dataIn_im);

  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dataInreg_re <= to_signed(16#0000#, 16);
      dataInreg_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF softReset = '1' THEN
          dataInreg_re <= to_signed(16#0000#, 16);
          dataInreg_im <= to_signed(16#0000#, 16);
        ELSE 
          dataInreg_re <= dataIn_re_signed;
          dataInreg_im <= dataIn_im_signed;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      validInreg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF softReset = '1' THEN
          validInreg <= '0';
        ELSE 
          validInreg <= validIn;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  downsampleVal <= to_unsigned(16#004#, 12);

  intdelay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF softReset = '1' THEN
          intdelay_reg <= (OTHERS => '0');
        ELSE 
          intdelay_reg(0) <= c_vout;
          intdelay_reg(1 TO 8) <= intdelay_reg(0 TO 7);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;

  validOut_1 <= intdelay_reg(8);

  invalidOut_re <= to_signed(16#00000#, 18);
  invalidOut_im <= to_signed(16#00000#, 18);

  dataOut_re_signed <= signed(dataOut_re_1);

  dataOut_im_signed <= signed(dataOut_im_1);

  
  dataOut_re_tmp <= invalidOut_re WHEN validOut_1 = '0' ELSE
      dataOut_re_signed;
  
  dataOut_im_tmp <= invalidOut_im WHEN validOut_1 = '0' ELSE
      dataOut_im_signed;

  dataOut_re <= std_logic_vector(dataOut_re_tmp);

  dataOut_im <= std_logic_vector(dataOut_im_tmp);

  validOut <= validOut_1;

END rtl;

