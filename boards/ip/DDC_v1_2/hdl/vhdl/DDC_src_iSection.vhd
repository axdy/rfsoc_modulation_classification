-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/ddcduc/DDC_src_iSection.vhd
-- Created: 2023-01-04 14:03:17
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DDC_src_iSection
-- Source Path: ddcduc/DDC/CICDecimation/iSection
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DDC_src_iSection IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataInreg_re                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        dataInreg_im                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        validInreg                        :   IN    std_logic;
        internalReset                     :   IN    std_logic;
        integOut_re                       :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
        integOut_im                       :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En13
        );
END DDC_src_iSection;


ARCHITECTURE rtl OF DDC_src_iSection IS

  -- Signals
  SIGNAL dataInreg_re_signed              : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL dataInreg_im_signed              : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL iIn_re1                          : signed(25 DOWNTO 0);  -- sfix26_En15
  SIGNAL iOut_re1                         : signed(25 DOWNTO 0);  -- sfix26_En15
  SIGNAL adder_add_cast                   : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL adder_add_cast_1                 : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL addOut_re1                       : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOutreg_re1                      : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOut_re2                         : signed(25 DOWNTO 0);  -- sfix26_En15
  SIGNAL adder_add_cast_2                 : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL adder_add_cast_3                 : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL addOut_re2                       : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOutreg_re2                      : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOut_re3                         : signed(25 DOWNTO 0);  -- sfix26_En15
  SIGNAL adder_add_cast_4                 : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL adder_add_cast_5                 : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL addOut_re3                       : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOutreg_re3                      : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iIn_re4                          : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL iOut_re4                         : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL adder_add_cast_6                 : signed(25 DOWNTO 0);  -- sfix26_En14
  SIGNAL adder_add_cast_7                 : signed(25 DOWNTO 0);  -- sfix26_En14
  SIGNAL addOut_re4                       : signed(25 DOWNTO 0);  -- sfix26_En14
  SIGNAL iOutreg_re4                      : signed(25 DOWNTO 0);  -- sfix26_En14
  SIGNAL iIn_re5                          : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL iOut_re5                         : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL adder_add_cast_8                 : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL adder_add_cast_9                 : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL addOut_re5                       : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL iOutreg_re5                      : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL iIn_im1                          : signed(25 DOWNTO 0);  -- sfix26_En15
  SIGNAL iOut_im1                         : signed(25 DOWNTO 0);  -- sfix26_En15
  SIGNAL adder_add_cast_10                : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL adder_add_cast_11                : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL addOut_im1                       : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOutreg_im1                      : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOut_im2                         : signed(25 DOWNTO 0);  -- sfix26_En15
  SIGNAL adder_add_cast_12                : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL adder_add_cast_13                : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL addOut_im2                       : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOutreg_im2                      : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOut_im3                         : signed(25 DOWNTO 0);  -- sfix26_En15
  SIGNAL adder_add_cast_14                : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL adder_add_cast_15                : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL addOut_im3                       : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iOutreg_im3                      : signed(26 DOWNTO 0);  -- sfix27_En15
  SIGNAL iIn_im4                          : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL iOut_im4                         : signed(24 DOWNTO 0);  -- sfix25_En14
  SIGNAL adder_add_cast_16                : signed(25 DOWNTO 0);  -- sfix26_En14
  SIGNAL adder_add_cast_17                : signed(25 DOWNTO 0);  -- sfix26_En14
  SIGNAL addOut_im4                       : signed(25 DOWNTO 0);  -- sfix26_En14
  SIGNAL iOutreg_im4                      : signed(25 DOWNTO 0);  -- sfix26_En14
  SIGNAL iIn_im5                          : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL iOut_im5                         : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL adder_add_cast_18                : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL adder_add_cast_19                : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL addOut_im5                       : signed(24 DOWNTO 0);  -- sfix25_En13
  SIGNAL iOutreg_im5                      : signed(24 DOWNTO 0);  -- sfix25_En13

BEGIN
  dataInreg_re_signed <= signed(dataInreg_re);

  iIn_re1 <= resize(dataInreg_re_signed, 26);

  adder_add_cast <= resize(iIn_re1, 27);
  adder_add_cast_1 <= resize(iOut_re1, 27);
  addOut_re1 <= adder_add_cast + adder_add_cast_1;

  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_re1 <= to_signed(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_re1 <= to_signed(16#0000000#, 27);
        ELSIF validInreg = '1' THEN
          iOutreg_re1 <= addOut_re1;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  iOut_re1 <= iOutreg_re1(25 DOWNTO 0);

  adder_add_cast_2 <= resize(iOut_re1, 27);
  adder_add_cast_3 <= resize(iOut_re2, 27);
  addOut_re2 <= adder_add_cast_2 + adder_add_cast_3;

  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_re2 <= to_signed(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_re2 <= to_signed(16#0000000#, 27);
        ELSIF validInreg = '1' THEN
          iOutreg_re2 <= addOut_re2;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  iOut_re2 <= iOutreg_re2(25 DOWNTO 0);

  adder_add_cast_4 <= resize(iOut_re2, 27);
  adder_add_cast_5 <= resize(iOut_re3, 27);
  addOut_re3 <= adder_add_cast_4 + adder_add_cast_5;

  intdelay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_re3 <= to_signed(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_re3 <= to_signed(16#0000000#, 27);
        ELSIF validInreg = '1' THEN
          iOutreg_re3 <= addOut_re3;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


  iOut_re3 <= iOutreg_re3(25 DOWNTO 0);

  iIn_re4 <= iOut_re3(25 DOWNTO 1);

  adder_add_cast_6 <= resize(iIn_re4, 26);
  adder_add_cast_7 <= resize(iOut_re4, 26);
  addOut_re4 <= adder_add_cast_6 + adder_add_cast_7;

  intdelay_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_re4 <= to_signed(16#0000000#, 26);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_re4 <= to_signed(16#0000000#, 26);
        ELSIF validInreg = '1' THEN
          iOutreg_re4 <= addOut_re4;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_3_process;


  iOut_re4 <= iOutreg_re4(24 DOWNTO 0);

  iIn_re5 <= iOut_re4(24 DOWNTO 1);

  adder_add_cast_8 <= resize(iIn_re5, 25);
  adder_add_cast_9 <= resize(iOut_re5, 25);
  addOut_re5 <= adder_add_cast_8 + adder_add_cast_9;

  intdelay_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_re5 <= to_signed(16#0000000#, 25);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_re5 <= to_signed(16#0000000#, 25);
        ELSIF validInreg = '1' THEN
          iOutreg_re5 <= addOut_re5;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_4_process;


  iOut_re5 <= iOutreg_re5(23 DOWNTO 0);

  integOut_re <= std_logic_vector(iOut_re5);

  dataInreg_im_signed <= signed(dataInreg_im);

  iIn_im1 <= resize(dataInreg_im_signed, 26);

  adder_add_cast_10 <= resize(iIn_im1, 27);
  adder_add_cast_11 <= resize(iOut_im1, 27);
  addOut_im1 <= adder_add_cast_10 + adder_add_cast_11;

  intdelay_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_im1 <= to_signed(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_im1 <= to_signed(16#0000000#, 27);
        ELSIF validInreg = '1' THEN
          iOutreg_im1 <= addOut_im1;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_5_process;


  iOut_im1 <= iOutreg_im1(25 DOWNTO 0);

  adder_add_cast_12 <= resize(iOut_im1, 27);
  adder_add_cast_13 <= resize(iOut_im2, 27);
  addOut_im2 <= adder_add_cast_12 + adder_add_cast_13;

  intdelay_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_im2 <= to_signed(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_im2 <= to_signed(16#0000000#, 27);
        ELSIF validInreg = '1' THEN
          iOutreg_im2 <= addOut_im2;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_6_process;


  iOut_im2 <= iOutreg_im2(25 DOWNTO 0);

  adder_add_cast_14 <= resize(iOut_im2, 27);
  adder_add_cast_15 <= resize(iOut_im3, 27);
  addOut_im3 <= adder_add_cast_14 + adder_add_cast_15;

  intdelay_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_im3 <= to_signed(16#0000000#, 27);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_im3 <= to_signed(16#0000000#, 27);
        ELSIF validInreg = '1' THEN
          iOutreg_im3 <= addOut_im3;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_7_process;


  iOut_im3 <= iOutreg_im3(25 DOWNTO 0);

  iIn_im4 <= iOut_im3(25 DOWNTO 1);

  adder_add_cast_16 <= resize(iIn_im4, 26);
  adder_add_cast_17 <= resize(iOut_im4, 26);
  addOut_im4 <= adder_add_cast_16 + adder_add_cast_17;

  intdelay_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_im4 <= to_signed(16#0000000#, 26);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_im4 <= to_signed(16#0000000#, 26);
        ELSIF validInreg = '1' THEN
          iOutreg_im4 <= addOut_im4;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_8_process;


  iOut_im4 <= iOutreg_im4(24 DOWNTO 0);

  iIn_im5 <= iOut_im4(24 DOWNTO 1);

  adder_add_cast_18 <= resize(iIn_im5, 25);
  adder_add_cast_19 <= resize(iOut_im5, 25);
  addOut_im5 <= adder_add_cast_18 + adder_add_cast_19;

  intdelay_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      iOutreg_im5 <= to_signed(16#0000000#, 25);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF internalReset = '1' THEN
          iOutreg_im5 <= to_signed(16#0000000#, 25);
        ELSIF validInreg = '1' THEN
          iOutreg_im5 <= addOut_im5;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_9_process;


  iOut_im5 <= iOutreg_im5(23 DOWNTO 0);

  integOut_im <= std_logic_vector(iOut_im5);

END rtl;

